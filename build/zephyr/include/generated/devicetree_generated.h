/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/Users/udayakumar/zephyrproject/my_projects/button/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@8000000
 *   4   /clocks
 *   5   /clocks/clk_fast
 *   6   /clocks/fll0
 *   7   /clocks/clk_hf0
 *   8   /clocks/clk_imo
 *   9   /clocks/path_mux1
 *   10  /clocks/clk_hf1
 *   11  /clocks/path_mux2
 *   12  /clocks/clk_hf2
 *   13  /clocks/path_mux3
 *   14  /clocks/clk_hf3
 *   15  /clocks/path_mux4
 *   16  /clocks/clk_hf4
 *   17  /clocks/clk_peri
 *   18  /clocks/clk_slow
 *   19  /clocks/path_mux0
 *   20  /clocks/pll0
 *   21  /cpus
 *   22  /cpus/cpu@0
 *   23  /cpus/cpu@1
 *   24  /flash-controller@40240000
 *   25  /flash-controller@40240000/flash@10000000
 *   26  /flash-controller@40240000/flash@14000000
 *   27  /gpio_keys
 *   28  /soc
 *   29  /soc/interrupt-controller@e000e100
 *   30  /soc/pinctrl@40300000
 *   31  /soc/pinctrl@40300000/gpio@40310000
 *   32  /gpio_keys/button_0
 *   33  /leds
 *   34  /soc/pinctrl@40300000/gpio@40310680
 *   35  /leds/led_0
 *   36  /soc/adc@409d0000
 *   37  /soc/counter@40380100
 *   38  /soc/counter@40380140
 *   39  /soc/counter@40380180
 *   40  /soc/counter@403801c0
 *   41  /soc/counter@40380200
 *   42  /soc/counter@40380240
 *   43  /soc/counter@40380280
 *   44  /soc/counter@403802c0
 *   45  /soc/counter@40390100
 *   46  /soc/counter@40390140
 *   47  /soc/counter@40390180
 *   48  /soc/counter@403901c0
 *   49  /soc/counter@40390200
 *   50  /soc/counter@40390240
 *   51  /soc/counter@40390280
 *   52  /soc/counter@403902c0
 *   53  /soc/counter@40390300
 *   54  /soc/counter@40390340
 *   55  /soc/counter@40390380
 *   56  /soc/counter@403903c0
 *   57  /soc/counter@40390400
 *   58  /soc/counter@40390440
 *   59  /soc/counter@40390480
 *   60  /soc/counter@403904c0
 *   61  /soc/counter@40390500
 *   62  /soc/counter@40390540
 *   63  /soc/counter@40390580
 *   64  /soc/counter@403905c0
 *   65  /soc/counter@40390600
 *   66  /soc/counter@40390640
 *   67  /soc/counter@40390680
 *   68  /soc/counter@403906c0
 *   69  /soc/scb@40600000
 *   70  /soc/scb@40610000
 *   71  /soc/pinctrl@40300000/p6_0_scb3_i2c_scl
 *   72  /soc/pinctrl@40300000/p6_1_scb3_i2c_sda
 *   73  /soc/scb@40630000
 *   74  /soc/scb@40640000
 *   75  /soc/pinctrl@40300000/p5_0_scb5_uart_rx
 *   76  /soc/pinctrl@40300000/p5_1_scb5_uart_tx
 *   77  /soc/scb@40650000
 *   78  /soc/scb@40660000
 *   79  /soc/scb@40670000
 *   80  /soc/scb@40680000
 *   81  /soc/scb@40690000
 *   82  /soc/scb@406a0000
 *   83  /soc/scb@406b0000
 *   84  /soc/scb@406c0000
 *   85  /soc/timer@e000e010
 *   86  /soc/watchdog@40260180
 *   87  /soc/pinctrl@40300000/gpio@40310080
 *   88  /soc/pinctrl@40300000/gpio@40310100
 *   89  /soc/pinctrl@40300000/gpio@40310200
 *   90  /soc/pinctrl@40300000/gpio@40310280
 *   91  /soc/pinctrl@40300000/gpio@40310300
 *   92  /soc/pinctrl@40300000/gpio@40310380
 *   93  /soc/pinctrl@40300000/gpio@40310400
 *   94  /soc/pinctrl@40300000/gpio@40310480
 *   95  /soc/pinctrl@40300000/gpio@40310500
 *   96  /soc/pinctrl@40300000/gpio@40310580
 *   97  /soc/pinctrl@40300000/gpio@40310600
 *   98  /soc/pinctrl@40300000/gpio@40310700
 *   99  /soc/pinctrl@40300000/hsiom@40300000
 *   100 /soc/pinctrl@40300000/p3_0_scb2_uart_rx
 *   101 /soc/pinctrl@40300000/p3_1_scb2_uart_tx
 *   102 /soc/pinctrl@40300000/p3_2_scb2_uart_rts
 *   103 /soc/pinctrl@40300000/p3_3_scb2_uart_cts
 *   104 /soc/scb@40620000
 *   105 /soc/pinctrl@40300000/gpio@40310180
 *   106 /soc/scb@40620000/bt-hci
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_flash_controller_40240000) fn(DT_N_S_memory_8000000) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_8000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) fn(DT_N_S_memory_8000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_8000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_flash_controller_40240000) fn(DT_N_S_memory_8000000) fn(DT_N_S_clocks) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_8000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) fn(DT_N_S_memory_8000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_8000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_keys, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /memory@8000000 */ \
	4, /* /clocks */ \
	21, /* /cpus */ \
	24, /* /flash-controller@40240000 */ \
	27, /* /gpio_keys */ \
	28, /* /soc */ \
	33, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_cy8cproto_062_4343w DT_N
#define DT_N_INST_0_psoc6               DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_cy8cproto_062_4343w 1
#define DT_N_COMPAT_MATCHES_psoc6 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"cy8cproto_062_4343w", "PSoC6"}
#define DT_N_P_compatible_IDX_0 "cy8cproto_062_4343w"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED cy8cproto_062_4343w
#define DT_N_P_compatible_IDX_0_STRING_TOKEN cy8cproto_062_4343w
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN CY8CPROTO_062_4343W
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_1 "PSoC6"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED PSoC6
#define DT_N_P_compatible_IDX_1_STRING_TOKEN PSoC6
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN PSOC6
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /memory@8000000
 *
 * Node identifier: DT_N_S_memory_8000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_8000000_PATH "/memory@8000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_8000000_FULL_NAME "memory@8000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_8000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_8000000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_8000000_ORD 3
#define DT_N_S_memory_8000000_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_8000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_8000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_8000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_8000000_REG_NUM 1
#define DT_N_S_memory_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_memory_8000000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_memory_8000000_RANGES_NUM 0
#define DT_N_S_memory_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_8000000_IRQ_NUM 0
#define DT_N_S_memory_8000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_8000000_P_reg {134217728 /* 0x8000000 */, 1048576 /* 0x100000 */}
#define DT_N_S_memory_8000000_P_reg_IDX_0 134217728
#define DT_N_S_memory_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_8000000_P_reg_IDX_1 1048576
#define DT_N_S_memory_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_8000000_P_reg_EXISTS 1
#define DT_N_S_memory_8000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_8000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_8000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_8000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_8000000, compatible, 0)
#define DT_N_S_memory_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_8000000, compatible, 0)
#define DT_N_S_memory_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_8000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_8000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_8000000_P_compatible_LEN 1
#define DT_N_S_memory_8000000_P_compatible_EXISTS 1
#define DT_N_S_memory_8000000_P_wakeup_source 0
#define DT_N_S_memory_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_imo) fn(DT_N_S_clocks_S_path_mux0) fn(DT_N_S_clocks_S_path_mux1) fn(DT_N_S_clocks_S_path_mux2) fn(DT_N_S_clocks_S_path_mux3) fn(DT_N_S_clocks_S_path_mux4) fn(DT_N_S_clocks_S_fll0) fn(DT_N_S_clocks_S_pll0) fn(DT_N_S_clocks_S_clk_hf0) fn(DT_N_S_clocks_S_clk_hf1) fn(DT_N_S_clocks_S_clk_hf2) fn(DT_N_S_clocks_S_clk_hf3) fn(DT_N_S_clocks_S_clk_hf4) fn(DT_N_S_clocks_S_clk_fast) fn(DT_N_S_clocks_S_clk_slow) fn(DT_N_S_clocks_S_clk_peri)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_imo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_fll0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf3) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf4) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_fast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_slow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux2, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux3, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux4, __VA_ARGS__) fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) fn(DT_N_S_clocks_S_pll0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf4, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pll0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_imo) fn(DT_N_S_clocks_S_path_mux0) fn(DT_N_S_clocks_S_path_mux1) fn(DT_N_S_clocks_S_fll0) fn(DT_N_S_clocks_S_clk_hf0) fn(DT_N_S_clocks_S_clk_fast) fn(DT_N_S_clocks_S_clk_slow) fn(DT_N_S_clocks_S_clk_peri)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_imo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_fll0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_fast) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_slow) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 4
#define DT_N_S_clocks_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	5, /* /clocks/clk_fast */ \
	6, /* /clocks/fll0 */ \
	7, /* /clocks/clk_hf0 */ \
	8, /* /clocks/clk_imo */ \
	9, /* /clocks/path_mux1 */ \
	10, /* /clocks/clk_hf1 */ \
	11, /* /clocks/path_mux2 */ \
	12, /* /clocks/clk_hf2 */ \
	13, /* /clocks/path_mux3 */ \
	14, /* /clocks/clk_hf3 */ \
	15, /* /clocks/path_mux4 */ \
	16, /* /clocks/clk_hf4 */ \
	17, /* /clocks/clk_peri */ \
	18, /* /clocks/clk_slow */ \
	19, /* /clocks/path_mux0 */ \
	20, /* /clocks/pll0 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk_fast
 *
 * Node identifier: DT_N_S_clocks_S_clk_fast
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_fast_PATH "/clocks/clk_fast"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_fast_FULL_NAME "clk_fast"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_fast_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_fast_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_fast_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_fast_ORD 5
#define DT_N_S_clocks_S_clk_fast_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_fast_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_fast_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_fast_EXISTS 1
#define DT_N_INST_3_fixed_factor_clock DT_N_S_clocks_S_clk_fast
#define DT_N_NODELABEL_clk_fast        DT_N_S_clocks_S_clk_fast

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_fast_REG_NUM 0
#define DT_N_S_clocks_S_clk_fast_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_fast_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_fast_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_fast_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_fast_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_fast_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_fast_P_clock_div 1
#define DT_N_S_clocks_S_clk_fast_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/fll0
 *
 * Node identifier: DT_N_S_clocks_S_fll0
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_fll0_PATH "/clocks/fll0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_fll0_FULL_NAME "fll0"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_fll0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_fll0_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_fll0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_fll0_ORD 6
#define DT_N_S_clocks_S_fll0_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_fll0_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_fll0_SUPPORTS_ORDS \
	7, /* /clocks/clk_hf0 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_fll0_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_fll0
#define DT_N_NODELABEL_fll0     DT_N_S_clocks_S_fll0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_fll0_REG_NUM 0
#define DT_N_S_clocks_S_fll0_RANGES_NUM 0
#define DT_N_S_clocks_S_fll0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_fll0_IRQ_NUM 0
#define DT_N_S_clocks_S_fll0_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_fll0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_fll0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_fll0_P_clock_frequency 100000000
#define DT_N_S_clocks_S_fll0_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk_hf0
 *
 * Node identifier: DT_N_S_clocks_S_clk_hf0
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hf0_PATH "/clocks/clk_hf0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hf0_FULL_NAME "clk_hf0"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hf0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hf0_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hf0_ORD 7
#define DT_N_S_clocks_S_clk_hf0_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hf0_REQUIRES_ORDS \
	4, /* /clocks */ \
	6, /* /clocks/fll0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hf0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hf0_EXISTS 1
#define DT_N_INST_2_fixed_factor_clock DT_N_S_clocks_S_clk_hf0
#define DT_N_NODELABEL_clk_hf0         DT_N_S_clocks_S_clk_hf0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hf0_REG_NUM 0
#define DT_N_S_clocks_S_clk_hf0_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hf0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hf0_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hf0_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_hf0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hf0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hf0_P_clock_div 1
#define DT_N_S_clocks_S_clk_hf0_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hf0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hf0_P_clocks_IDX_0_PH DT_N_S_clocks_S_fll0
#define DT_N_S_clocks_S_clk_hf0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hf0, clocks, 0)
#define DT_N_S_clocks_S_clk_hf0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hf0, clocks, 0)
#define DT_N_S_clocks_S_clk_hf0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hf0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hf0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf0_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hf0_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_imo
 *
 * Node identifier: DT_N_S_clocks_S_clk_imo
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_imo_PATH "/clocks/clk_imo"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_imo_FULL_NAME "clk_imo"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_imo_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_imo_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_imo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_imo_ORD 8
#define DT_N_S_clocks_S_clk_imo_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_imo_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_imo_SUPPORTS_ORDS \
	9, /* /clocks/path_mux1 */ \
	11, /* /clocks/path_mux2 */ \
	13, /* /clocks/path_mux3 */ \
	15, /* /clocks/path_mux4 */ \
	19, /* /clocks/path_mux0 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_imo_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_imo
#define DT_N_NODELABEL_clk_imo  DT_N_S_clocks_S_clk_imo

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_imo_REG_NUM 0
#define DT_N_S_clocks_S_clk_imo_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_imo_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_imo_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_imo_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_imo_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_imo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_imo_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_imo_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/path_mux1
 *
 * Node identifier: DT_N_S_clocks_S_path_mux1
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_path_mux1_PATH "/clocks/path_mux1"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_path_mux1_FULL_NAME "path_mux1"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_path_mux1_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_path_mux1_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_path_mux1_ORD 9
#define DT_N_S_clocks_S_path_mux1_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_path_mux1_REQUIRES_ORDS \
	4, /* /clocks */ \
	8, /* /clocks/clk_imo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_path_mux1_SUPPORTS_ORDS \
	10, /* /clocks/clk_hf1 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_path_mux1_EXISTS 1
#define DT_N_INST_1_fixed_factor_clock DT_N_S_clocks_S_path_mux1
#define DT_N_NODELABEL_path_mux1       DT_N_S_clocks_S_path_mux1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_path_mux1_REG_NUM 0
#define DT_N_S_clocks_S_path_mux1_RANGES_NUM 0
#define DT_N_S_clocks_S_path_mux1_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_path_mux1_IRQ_NUM 0
#define DT_N_S_clocks_S_path_mux1_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_path_mux1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_path_mux1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_path_mux1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_path_mux1_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_imo
#define DT_N_S_clocks_S_path_mux1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_path_mux1, clocks, 0)
#define DT_N_S_clocks_S_path_mux1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_path_mux1, clocks, 0)
#define DT_N_S_clocks_S_path_mux1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_path_mux1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_path_mux1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux1_P_clocks_LEN 1
#define DT_N_S_clocks_S_path_mux1_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_hf1
 *
 * Node identifier: DT_N_S_clocks_S_clk_hf1
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hf1_PATH "/clocks/clk_hf1"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hf1_FULL_NAME "clk_hf1"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hf1_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hf1_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hf1_ORD 10
#define DT_N_S_clocks_S_clk_hf1_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hf1_REQUIRES_ORDS \
	4, /* /clocks */ \
	9, /* /clocks/path_mux1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hf1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hf1_EXISTS 1
#define DT_N_INST_9_fixed_factor_clock DT_N_S_clocks_S_clk_hf1
#define DT_N_NODELABEL_clk_hf1         DT_N_S_clocks_S_clk_hf1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hf1_REG_NUM 0
#define DT_N_S_clocks_S_clk_hf1_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hf1_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hf1_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hf1_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_hf1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hf1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hf1_P_clock_div 1
#define DT_N_S_clocks_S_clk_hf1_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hf1_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hf1_P_clocks_IDX_0_PH DT_N_S_clocks_S_path_mux1
#define DT_N_S_clocks_S_clk_hf1_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hf1, clocks, 0)
#define DT_N_S_clocks_S_clk_hf1_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hf1, clocks, 0)
#define DT_N_S_clocks_S_clk_hf1_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hf1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf1_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hf1, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf1_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hf1_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/path_mux2
 *
 * Node identifier: DT_N_S_clocks_S_path_mux2
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_path_mux2_PATH "/clocks/path_mux2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_path_mux2_FULL_NAME "path_mux2"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_path_mux2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_path_mux2_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_path_mux2_ORD 11
#define DT_N_S_clocks_S_path_mux2_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_path_mux2_REQUIRES_ORDS \
	4, /* /clocks */ \
	8, /* /clocks/clk_imo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_path_mux2_SUPPORTS_ORDS \
	12, /* /clocks/clk_hf2 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_path_mux2_EXISTS 1
#define DT_N_INST_6_fixed_factor_clock DT_N_S_clocks_S_path_mux2
#define DT_N_NODELABEL_path_mux2       DT_N_S_clocks_S_path_mux2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_path_mux2_REG_NUM 0
#define DT_N_S_clocks_S_path_mux2_RANGES_NUM 0
#define DT_N_S_clocks_S_path_mux2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_path_mux2_IRQ_NUM 0
#define DT_N_S_clocks_S_path_mux2_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_path_mux2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_path_mux2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_path_mux2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_path_mux2_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_imo
#define DT_N_S_clocks_S_path_mux2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_path_mux2, clocks, 0)
#define DT_N_S_clocks_S_path_mux2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_path_mux2, clocks, 0)
#define DT_N_S_clocks_S_path_mux2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_path_mux2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_path_mux2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux2_P_clocks_LEN 1
#define DT_N_S_clocks_S_path_mux2_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_hf2
 *
 * Node identifier: DT_N_S_clocks_S_clk_hf2
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hf2_PATH "/clocks/clk_hf2"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hf2_FULL_NAME "clk_hf2"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hf2_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hf2_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hf2_ORD 12
#define DT_N_S_clocks_S_clk_hf2_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hf2_REQUIRES_ORDS \
	4, /* /clocks */ \
	11, /* /clocks/path_mux2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hf2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hf2_EXISTS 1
#define DT_N_INST_10_fixed_factor_clock DT_N_S_clocks_S_clk_hf2
#define DT_N_NODELABEL_clk_hf2          DT_N_S_clocks_S_clk_hf2

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hf2_REG_NUM 0
#define DT_N_S_clocks_S_clk_hf2_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hf2_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hf2_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hf2_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_hf2_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hf2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hf2_P_clock_div 1
#define DT_N_S_clocks_S_clk_hf2_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hf2_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hf2_P_clocks_IDX_0_PH DT_N_S_clocks_S_path_mux2
#define DT_N_S_clocks_S_clk_hf2_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hf2, clocks, 0)
#define DT_N_S_clocks_S_clk_hf2_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hf2, clocks, 0)
#define DT_N_S_clocks_S_clk_hf2_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hf2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf2_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hf2, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf2_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hf2_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/path_mux3
 *
 * Node identifier: DT_N_S_clocks_S_path_mux3
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_path_mux3_PATH "/clocks/path_mux3"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_path_mux3_FULL_NAME "path_mux3"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_path_mux3_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_path_mux3_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_path_mux3_ORD 13
#define DT_N_S_clocks_S_path_mux3_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_path_mux3_REQUIRES_ORDS \
	4, /* /clocks */ \
	8, /* /clocks/clk_imo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_path_mux3_SUPPORTS_ORDS \
	14, /* /clocks/clk_hf3 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_path_mux3_EXISTS 1
#define DT_N_INST_7_fixed_factor_clock DT_N_S_clocks_S_path_mux3
#define DT_N_NODELABEL_path_mux3       DT_N_S_clocks_S_path_mux3

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_path_mux3_REG_NUM 0
#define DT_N_S_clocks_S_path_mux3_RANGES_NUM 0
#define DT_N_S_clocks_S_path_mux3_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_path_mux3_IRQ_NUM 0
#define DT_N_S_clocks_S_path_mux3_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_path_mux3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_path_mux3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_path_mux3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_path_mux3_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_imo
#define DT_N_S_clocks_S_path_mux3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_path_mux3, clocks, 0)
#define DT_N_S_clocks_S_path_mux3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_path_mux3, clocks, 0)
#define DT_N_S_clocks_S_path_mux3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_path_mux3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_path_mux3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux3_P_clocks_LEN 1
#define DT_N_S_clocks_S_path_mux3_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_hf3
 *
 * Node identifier: DT_N_S_clocks_S_clk_hf3
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hf3_PATH "/clocks/clk_hf3"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hf3_FULL_NAME "clk_hf3"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hf3_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hf3_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hf3_ORD 14
#define DT_N_S_clocks_S_clk_hf3_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hf3_REQUIRES_ORDS \
	4, /* /clocks */ \
	13, /* /clocks/path_mux3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hf3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hf3_EXISTS 1
#define DT_N_INST_11_fixed_factor_clock DT_N_S_clocks_S_clk_hf3
#define DT_N_NODELABEL_clk_hf3          DT_N_S_clocks_S_clk_hf3

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hf3_REG_NUM 0
#define DT_N_S_clocks_S_clk_hf3_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hf3_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hf3_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hf3_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_hf3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hf3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hf3_P_clock_div 1
#define DT_N_S_clocks_S_clk_hf3_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hf3_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hf3_P_clocks_IDX_0_PH DT_N_S_clocks_S_path_mux3
#define DT_N_S_clocks_S_clk_hf3_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hf3, clocks, 0)
#define DT_N_S_clocks_S_clk_hf3_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hf3, clocks, 0)
#define DT_N_S_clocks_S_clk_hf3_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hf3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf3_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hf3, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf3_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hf3_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/path_mux4
 *
 * Node identifier: DT_N_S_clocks_S_path_mux4
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_path_mux4_PATH "/clocks/path_mux4"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_path_mux4_FULL_NAME "path_mux4"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_path_mux4_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_path_mux4_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_path_mux4_ORD 15
#define DT_N_S_clocks_S_path_mux4_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_path_mux4_REQUIRES_ORDS \
	4, /* /clocks */ \
	8, /* /clocks/clk_imo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_path_mux4_SUPPORTS_ORDS \
	16, /* /clocks/clk_hf4 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_path_mux4_EXISTS 1
#define DT_N_INST_8_fixed_factor_clock DT_N_S_clocks_S_path_mux4
#define DT_N_NODELABEL_path_mux4       DT_N_S_clocks_S_path_mux4

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_path_mux4_REG_NUM 0
#define DT_N_S_clocks_S_path_mux4_RANGES_NUM 0
#define DT_N_S_clocks_S_path_mux4_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_path_mux4_IRQ_NUM 0
#define DT_N_S_clocks_S_path_mux4_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_path_mux4_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_path_mux4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_path_mux4_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_path_mux4_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_imo
#define DT_N_S_clocks_S_path_mux4_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_path_mux4, clocks, 0)
#define DT_N_S_clocks_S_path_mux4_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_path_mux4, clocks, 0)
#define DT_N_S_clocks_S_path_mux4_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_path_mux4, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux4_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_path_mux4, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux4_P_clocks_LEN 1
#define DT_N_S_clocks_S_path_mux4_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_hf4
 *
 * Node identifier: DT_N_S_clocks_S_clk_hf4
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hf4_PATH "/clocks/clk_hf4"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hf4_FULL_NAME "clk_hf4"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hf4_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hf4_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hf4_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hf4_ORD 16
#define DT_N_S_clocks_S_clk_hf4_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hf4_REQUIRES_ORDS \
	4, /* /clocks */ \
	15, /* /clocks/path_mux4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hf4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hf4_EXISTS 1
#define DT_N_INST_12_fixed_factor_clock DT_N_S_clocks_S_clk_hf4
#define DT_N_NODELABEL_clk_hf4          DT_N_S_clocks_S_clk_hf4

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hf4_REG_NUM 0
#define DT_N_S_clocks_S_clk_hf4_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hf4_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hf4_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hf4_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_hf4_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hf4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hf4_P_clock_div 1
#define DT_N_S_clocks_S_clk_hf4_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_clk_hf4_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_clk_hf4_P_clocks_IDX_0_PH DT_N_S_clocks_S_path_mux4
#define DT_N_S_clocks_S_clk_hf4_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_clk_hf4, clocks, 0)
#define DT_N_S_clocks_S_clk_hf4_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_clk_hf4, clocks, 0)
#define DT_N_S_clocks_S_clk_hf4_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hf4, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf4_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_clk_hf4, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_clk_hf4_P_clocks_LEN 1
#define DT_N_S_clocks_S_clk_hf4_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/clk_peri
 *
 * Node identifier: DT_N_S_clocks_S_clk_peri
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_peri_PATH "/clocks/clk_peri"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_peri_FULL_NAME "clk_peri"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_peri_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_peri_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_peri_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_peri_ORD 17
#define DT_N_S_clocks_S_clk_peri_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_peri_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_peri_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_peri_EXISTS 1
#define DT_N_INST_5_fixed_factor_clock DT_N_S_clocks_S_clk_peri
#define DT_N_NODELABEL_clk_peri        DT_N_S_clocks_S_clk_peri

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_peri_REG_NUM 0
#define DT_N_S_clocks_S_clk_peri_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_peri_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_peri_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_peri_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_peri_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_peri_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_peri_P_clock_div 1
#define DT_N_S_clocks_S_clk_peri_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/clk_slow
 *
 * Node identifier: DT_N_S_clocks_S_clk_slow
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_slow_PATH "/clocks/clk_slow"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_slow_FULL_NAME "clk_slow"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_slow_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_slow_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_slow_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_slow_ORD 18
#define DT_N_S_clocks_S_clk_slow_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_slow_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_slow_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_slow_EXISTS 1
#define DT_N_INST_4_fixed_factor_clock DT_N_S_clocks_S_clk_slow
#define DT_N_NODELABEL_clk_slow        DT_N_S_clocks_S_clk_slow

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_slow_REG_NUM 0
#define DT_N_S_clocks_S_clk_slow_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_slow_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_slow_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_slow_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_clk_slow_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_slow_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_slow_P_clock_div 2
#define DT_N_S_clocks_S_clk_slow_P_clock_div_EXISTS 1

/*
 * Devicetree node: /clocks/path_mux0
 *
 * Node identifier: DT_N_S_clocks_S_path_mux0
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_path_mux0_PATH "/clocks/path_mux0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_path_mux0_FULL_NAME "path_mux0"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_path_mux0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_path_mux0_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_path_mux0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_path_mux0_ORD 19
#define DT_N_S_clocks_S_path_mux0_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_path_mux0_REQUIRES_ORDS \
	4, /* /clocks */ \
	8, /* /clocks/clk_imo */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_path_mux0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_path_mux0_EXISTS 1
#define DT_N_INST_0_fixed_factor_clock DT_N_S_clocks_S_path_mux0
#define DT_N_NODELABEL_path_mux0       DT_N_S_clocks_S_path_mux0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_path_mux0_REG_NUM 0
#define DT_N_S_clocks_S_path_mux0_RANGES_NUM 0
#define DT_N_S_clocks_S_path_mux0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_path_mux0_IRQ_NUM 0
#define DT_N_S_clocks_S_path_mux0_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_path_mux0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_path_mux0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_path_mux0_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_path_mux0_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_imo
#define DT_N_S_clocks_S_path_mux0_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_path_mux0, clocks, 0)
#define DT_N_S_clocks_S_path_mux0_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_path_mux0, clocks, 0)
#define DT_N_S_clocks_S_path_mux0_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_path_mux0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux0_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_path_mux0, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_path_mux0_P_clocks_LEN 1
#define DT_N_S_clocks_S_path_mux0_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/pll0
 *
 * Node identifier: DT_N_S_clocks_S_pll0
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll0_PATH "/clocks/pll0"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll0_FULL_NAME "pll0"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll0_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll0_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll0_ORD 20
#define DT_N_S_clocks_S_pll0_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll0_REQUIRES_ORDS \
	4, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll0_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_pll0
#define DT_N_NODELABEL_pll0     DT_N_S_clocks_S_pll0

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll0_REG_NUM 0
#define DT_N_S_clocks_S_pll0_RANGES_NUM 0
#define DT_N_S_clocks_S_pll0_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll0_IRQ_NUM 0
#define DT_N_S_clocks_S_pll0_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_pll0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 21
#define DT_N_S_cpus_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	22, /* /cpus/cpu@0 */ \
	23, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 22
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	21, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m0+
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 23
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	21, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "cortex-m4f"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m4f
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m4f
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M4F
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /flash-controller@40240000
 *
 * Node identifier: DT_N_S_flash_controller_40240000
 *
 * Binding (compatible = infineon,cat1-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\infineon,cat1-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_flash_controller_40240000_PATH "/flash-controller@40240000"

/* Node's name with unit-address: */
#define DT_N_S_flash_controller_40240000_FULL_NAME "flash-controller@40240000"

/* Node parent (/) identifier: */
#define DT_N_S_flash_controller_40240000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_flash_controller_40240000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD(fn) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) fn(DT_N_S_flash_controller_40240000_S_flash_14000000)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000_S_flash_14000000)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) fn(DT_N_S_flash_controller_40240000_S_flash_14000000)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000_S_flash_14000000)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_flash_controller_40240000_ORD 24
#define DT_N_S_flash_controller_40240000_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_flash_controller_40240000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_flash_controller_40240000_SUPPORTS_ORDS \
	25, /* /flash-controller@40240000/flash@10000000 */ \
	26, /* /flash-controller@40240000/flash@14000000 */

/* Existence and alternate IDs: */
#define DT_N_S_flash_controller_40240000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_flash_controller DT_N_S_flash_controller_40240000

/* Macros for properties that are special in the specification: */
#define DT_N_S_flash_controller_40240000_REG_NUM 1
#define DT_N_S_flash_controller_40240000_REG_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_REG_IDX_0_VAL_ADDRESS 1076101120 /* 0x40240000 */
#define DT_N_S_flash_controller_40240000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_flash_controller_40240000_RANGES_NUM 0
#define DT_N_S_flash_controller_40240000_FOREACH_RANGE(fn) 
#define DT_N_S_flash_controller_40240000_IRQ_NUM 0
#define DT_N_S_flash_controller_40240000_COMPAT_MATCHES_infineon_cat1_flash_controller 1
#define DT_N_S_flash_controller_40240000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_flash_controller_40240000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_COMPAT_MODEL_IDX_0 "cat1-flash-controller"
#define DT_N_S_flash_controller_40240000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_flash_controller_40240000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_flash_controller_40240000_P_reg {1076101120 /* 0x40240000 */, 65536 /* 0x10000 */}
#define DT_N_S_flash_controller_40240000_P_reg_IDX_0 1076101120
#define DT_N_S_flash_controller_40240000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_reg_IDX_1 65536
#define DT_N_S_flash_controller_40240000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_reg_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_compatible {"infineon,cat1-flash-controller"}
#define DT_N_S_flash_controller_40240000_P_compatible_IDX_0 "infineon,cat1-flash-controller"
#define DT_N_S_flash_controller_40240000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-flash-controller
#define DT_N_S_flash_controller_40240000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_flash_controller
#define DT_N_S_flash_controller_40240000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_FLASH_CONTROLLER
#define DT_N_S_flash_controller_40240000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_flash_controller_40240000, compatible, 0)
#define DT_N_S_flash_controller_40240000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_flash_controller_40240000, compatible, 0)
#define DT_N_S_flash_controller_40240000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_flash_controller_40240000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_flash_controller_40240000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_P_compatible_LEN 1
#define DT_N_S_flash_controller_40240000_P_compatible_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_wakeup_source 0
#define DT_N_S_flash_controller_40240000_P_wakeup_source_EXISTS 1
#define DT_N_S_flash_controller_40240000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_flash_controller_40240000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /flash-controller@40240000/flash@10000000
 *
 * Node identifier: DT_N_S_flash_controller_40240000_S_flash_10000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_PATH "/flash-controller@40240000/flash@10000000"

/* Node's name with unit-address: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FULL_NAME "flash@10000000"

/* Node parent (/flash-controller@40240000) identifier: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_PARENT DT_N_S_flash_controller_40240000

/* Node's index in its parent's list of children: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_ORD 25
#define DT_N_S_flash_controller_40240000_S_flash_10000000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_REQUIRES_ORDS \
	24, /* /flash-controller@40240000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_flash_controller_40240000_S_flash_10000000
#define DT_N_NODELABEL_flash0    DT_N_S_flash_controller_40240000_S_flash_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_REG_NUM 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_RANGES_NUM 0
#define DT_N_S_flash_controller_40240000_S_flash_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_10000000_IRQ_NUM 0
#define DT_N_S_flash_controller_40240000_S_flash_10000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_erase_block_size 512
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_erase_block_size_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_write_block_size 512
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_write_block_size_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, compatible, 0)
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, compatible, 0)
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_LEN 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_compatible_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg {268435456 /* 0x10000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg_IDX_0 268435456
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg_IDX_1 2097152
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_reg_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_wakeup_source 0
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_flash_controller_40240000_S_flash_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /flash-controller@40240000/flash@14000000
 *
 * Node identifier: DT_N_S_flash_controller_40240000_S_flash_14000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_PATH "/flash-controller@40240000/flash@14000000"

/* Node's name with unit-address: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FULL_NAME "flash@14000000"

/* Node parent (/flash-controller@40240000) identifier: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_PARENT DT_N_S_flash_controller_40240000

/* Node's index in its parent's list of children: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_ORD 26
#define DT_N_S_flash_controller_40240000_S_flash_14000000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_REQUIRES_ORDS \
	24, /* /flash-controller@40240000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_EXISTS 1
#define DT_N_INST_1_soc_nv_flash DT_N_S_flash_controller_40240000_S_flash_14000000
#define DT_N_NODELABEL_flash1    DT_N_S_flash_controller_40240000_S_flash_14000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_REG_NUM 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_REG_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_REG_IDX_0_VAL_ADDRESS 335544320 /* 0x14000000 */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_RANGES_NUM 0
#define DT_N_S_flash_controller_40240000_S_flash_14000000_FOREACH_RANGE(fn) 
#define DT_N_S_flash_controller_40240000_S_flash_14000000_IRQ_NUM 0
#define DT_N_S_flash_controller_40240000_S_flash_14000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_erase_block_size 512
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_erase_block_size_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_write_block_size 512
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_write_block_size_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, compatible, 0)
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, compatible, 0)
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_LEN 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_compatible_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg {335544320 /* 0x14000000 */, 32768 /* 0x8000 */}
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg_IDX_0 335544320
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg_IDX_1 32768
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_reg_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_wakeup_source 0
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_wakeup_source_EXISTS 1
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_flash_controller_40240000_S_flash_14000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\input\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 27
#define DT_N_S_gpio_keys_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	32, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_debounce_interval_ms 30
#define DT_N_S_gpio_keys_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_gpio_keys_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1
#define DT_N_S_gpio_keys_P_wakeup_source 0
#define DT_N_S_gpio_keys_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_keys_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40300000) fn(DT_N_S_soc_S_scb_40600000) fn(DT_N_S_soc_S_scb_40610000) fn(DT_N_S_soc_S_scb_40620000) fn(DT_N_S_soc_S_scb_40630000) fn(DT_N_S_soc_S_scb_40640000) fn(DT_N_S_soc_S_scb_40650000) fn(DT_N_S_soc_S_scb_40660000) fn(DT_N_S_soc_S_scb_40670000) fn(DT_N_S_soc_S_scb_40680000) fn(DT_N_S_soc_S_scb_40690000) fn(DT_N_S_soc_S_scb_406a0000) fn(DT_N_S_soc_S_scb_406b0000) fn(DT_N_S_soc_S_scb_406c0000) fn(DT_N_S_soc_S_adc_409d0000) fn(DT_N_S_soc_S_watchdog_40260180) fn(DT_N_S_soc_S_counter_40380100) fn(DT_N_S_soc_S_counter_40380140) fn(DT_N_S_soc_S_counter_40380180) fn(DT_N_S_soc_S_counter_403801c0) fn(DT_N_S_soc_S_counter_40380200) fn(DT_N_S_soc_S_counter_40380240) fn(DT_N_S_soc_S_counter_40380280) fn(DT_N_S_soc_S_counter_403802c0) fn(DT_N_S_soc_S_counter_40390100) fn(DT_N_S_soc_S_counter_40390140) fn(DT_N_S_soc_S_counter_40390180) fn(DT_N_S_soc_S_counter_403901c0) fn(DT_N_S_soc_S_counter_40390200) fn(DT_N_S_soc_S_counter_40390240) fn(DT_N_S_soc_S_counter_40390280) fn(DT_N_S_soc_S_counter_403902c0) fn(DT_N_S_soc_S_counter_40390300) fn(DT_N_S_soc_S_counter_40390340) fn(DT_N_S_soc_S_counter_40390380) fn(DT_N_S_soc_S_counter_403903c0) fn(DT_N_S_soc_S_counter_40390400) fn(DT_N_S_soc_S_counter_40390440) fn(DT_N_S_soc_S_counter_40390480) fn(DT_N_S_soc_S_counter_403904c0) fn(DT_N_S_soc_S_counter_40390500) fn(DT_N_S_soc_S_counter_40390540) fn(DT_N_S_soc_S_counter_40390580) fn(DT_N_S_soc_S_counter_403905c0) fn(DT_N_S_soc_S_counter_40390600) fn(DT_N_S_soc_S_counter_40390640) fn(DT_N_S_soc_S_counter_40390680) fn(DT_N_S_soc_S_counter_403906c0)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40600000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40610000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40620000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40630000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40640000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40650000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40660000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40670000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40680000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40690000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406b0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_409d0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40260180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380140) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403801c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380240) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403802c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390140) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403901c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390240) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403902c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390340) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390380) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403903c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390440) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403904c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390500) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390540) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390580) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403905c0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390640) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390680) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403906c0)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40600000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40610000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40630000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40640000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40660000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40670000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40680000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40690000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406a0000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406b0000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406c0000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_409d0000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380140, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403801c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380200, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380240, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380280, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403802c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390100, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390140, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403901c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390200, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390240, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390280, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403902c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390300, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390340, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390380, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403903c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390400, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390440, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390480, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403904c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390500, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390540, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390580, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403905c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390600, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390640, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390680, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403906c0, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40600000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40610000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40630000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40640000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40660000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40670000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40680000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40690000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406b0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_406c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_409d0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380140, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403801c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380240, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403802c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390140, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403901c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390240, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403902c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390340, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390380, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403903c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390440, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403904c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390500, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390540, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390580, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403905c0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390640, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40390680, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_403906c0, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40300000) fn(DT_N_S_soc_S_scb_40620000) fn(DT_N_S_soc_S_scb_40650000) fn(DT_N_S_soc_S_watchdog_40260180) fn(DT_N_S_soc_S_counter_40380100)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40620000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40650000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40260180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380100)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 28
#define DT_N_S_soc_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */ \
	36, /* /soc/adc@409d0000 */ \
	37, /* /soc/counter@40380100 */ \
	38, /* /soc/counter@40380140 */ \
	39, /* /soc/counter@40380180 */ \
	40, /* /soc/counter@403801c0 */ \
	41, /* /soc/counter@40380200 */ \
	42, /* /soc/counter@40380240 */ \
	43, /* /soc/counter@40380280 */ \
	44, /* /soc/counter@403802c0 */ \
	45, /* /soc/counter@40390100 */ \
	46, /* /soc/counter@40390140 */ \
	47, /* /soc/counter@40390180 */ \
	48, /* /soc/counter@403901c0 */ \
	49, /* /soc/counter@40390200 */ \
	50, /* /soc/counter@40390240 */ \
	51, /* /soc/counter@40390280 */ \
	52, /* /soc/counter@403902c0 */ \
	53, /* /soc/counter@40390300 */ \
	54, /* /soc/counter@40390340 */ \
	55, /* /soc/counter@40390380 */ \
	56, /* /soc/counter@403903c0 */ \
	57, /* /soc/counter@40390400 */ \
	58, /* /soc/counter@40390440 */ \
	59, /* /soc/counter@40390480 */ \
	60, /* /soc/counter@403904c0 */ \
	61, /* /soc/counter@40390500 */ \
	62, /* /soc/counter@40390540 */ \
	63, /* /soc/counter@40390580 */ \
	64, /* /soc/counter@403905c0 */ \
	65, /* /soc/counter@40390600 */ \
	66, /* /soc/counter@40390640 */ \
	67, /* /soc/counter@40390680 */ \
	68, /* /soc/counter@403906c0 */ \
	69, /* /soc/scb@40600000 */ \
	70, /* /soc/scb@40610000 */ \
	73, /* /soc/scb@40630000 */ \
	74, /* /soc/scb@40640000 */ \
	77, /* /soc/scb@40650000 */ \
	78, /* /soc/scb@40660000 */ \
	79, /* /soc/scb@40670000 */ \
	80, /* /soc/scb@40680000 */ \
	81, /* /soc/scb@40690000 */ \
	82, /* /soc/scb@406a0000 */ \
	83, /* /soc/scb@406b0000 */ \
	84, /* /soc/scb@406c0000 */ \
	85, /* /soc/timer@e000e010 */ \
	86, /* /soc/watchdog@40260180 */ \
	104, /* /soc/scb@40620000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 29
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	28, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	31, /* /soc/pinctrl@40300000/gpio@40310000 */ \
	34, /* /soc/pinctrl@40300000/gpio@40310680 */ \
	36, /* /soc/adc@409d0000 */ \
	37, /* /soc/counter@40380100 */ \
	38, /* /soc/counter@40380140 */ \
	39, /* /soc/counter@40380180 */ \
	40, /* /soc/counter@403801c0 */ \
	41, /* /soc/counter@40380200 */ \
	42, /* /soc/counter@40380240 */ \
	43, /* /soc/counter@40380280 */ \
	44, /* /soc/counter@403802c0 */ \
	45, /* /soc/counter@40390100 */ \
	46, /* /soc/counter@40390140 */ \
	47, /* /soc/counter@40390180 */ \
	48, /* /soc/counter@403901c0 */ \
	49, /* /soc/counter@40390200 */ \
	50, /* /soc/counter@40390240 */ \
	51, /* /soc/counter@40390280 */ \
	52, /* /soc/counter@403902c0 */ \
	53, /* /soc/counter@40390300 */ \
	54, /* /soc/counter@40390340 */ \
	55, /* /soc/counter@40390380 */ \
	56, /* /soc/counter@403903c0 */ \
	57, /* /soc/counter@40390400 */ \
	58, /* /soc/counter@40390440 */ \
	59, /* /soc/counter@40390480 */ \
	60, /* /soc/counter@403904c0 */ \
	61, /* /soc/counter@40390500 */ \
	62, /* /soc/counter@40390540 */ \
	63, /* /soc/counter@40390580 */ \
	64, /* /soc/counter@403905c0 */ \
	65, /* /soc/counter@40390600 */ \
	66, /* /soc/counter@40390640 */ \
	67, /* /soc/counter@40390680 */ \
	68, /* /soc/counter@403906c0 */ \
	69, /* /soc/scb@40600000 */ \
	70, /* /soc/scb@40610000 */ \
	73, /* /soc/scb@40630000 */ \
	74, /* /soc/scb@40640000 */ \
	77, /* /soc/scb@40650000 */ \
	78, /* /soc/scb@40660000 */ \
	79, /* /soc/scb@40670000 */ \
	80, /* /soc/scb@40680000 */ \
	81, /* /soc/scb@40690000 */ \
	82, /* /soc/scb@406a0000 */ \
	83, /* /soc/scb@406b0000 */ \
	84, /* /soc/scb@406c0000 */ \
	86, /* /soc/watchdog@40260180 */ \
	87, /* /soc/pinctrl@40300000/gpio@40310080 */ \
	88, /* /soc/pinctrl@40300000/gpio@40310100 */ \
	89, /* /soc/pinctrl@40300000/gpio@40310200 */ \
	90, /* /soc/pinctrl@40300000/gpio@40310280 */ \
	91, /* /soc/pinctrl@40300000/gpio@40310300 */ \
	92, /* /soc/pinctrl@40300000/gpio@40310380 */ \
	93, /* /soc/pinctrl@40300000/gpio@40310400 */ \
	94, /* /soc/pinctrl@40300000/gpio@40310480 */ \
	95, /* /soc/pinctrl@40300000/gpio@40310500 */ \
	96, /* /soc/pinctrl@40300000/gpio@40310580 */ \
	97, /* /soc/pinctrl@40300000/gpio@40310600 */ \
	98, /* /soc/pinctrl@40300000/gpio@40310700 */ \
	99, /* /soc/pinctrl@40300000/hsiom@40300000 */ \
	104, /* /soc/scb@40620000 */ \
	105, /* /soc/pinctrl@40300000/gpio@40310180 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v7m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v7m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V7M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000
 *
 * Binding (compatible = infineon,cat1-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\infineon,cat1-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_PATH "/soc/pinctrl@40300000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_FULL_NAME "pinctrl@40300000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_ORD 30
#define DT_N_S_soc_S_pinctrl_40300000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_REQUIRES_ORDS \
	28, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_SUPPORTS_ORDS \
	31, /* /soc/pinctrl@40300000/gpio@40310000 */ \
	34, /* /soc/pinctrl@40300000/gpio@40310680 */ \
	71, /* /soc/pinctrl@40300000/p6_0_scb3_i2c_scl */ \
	72, /* /soc/pinctrl@40300000/p6_1_scb3_i2c_sda */ \
	75, /* /soc/pinctrl@40300000/p5_0_scb5_uart_rx */ \
	76, /* /soc/pinctrl@40300000/p5_1_scb5_uart_tx */ \
	87, /* /soc/pinctrl@40300000/gpio@40310080 */ \
	88, /* /soc/pinctrl@40300000/gpio@40310100 */ \
	89, /* /soc/pinctrl@40300000/gpio@40310200 */ \
	90, /* /soc/pinctrl@40300000/gpio@40310280 */ \
	91, /* /soc/pinctrl@40300000/gpio@40310300 */ \
	92, /* /soc/pinctrl@40300000/gpio@40310380 */ \
	93, /* /soc/pinctrl@40300000/gpio@40310400 */ \
	94, /* /soc/pinctrl@40300000/gpio@40310480 */ \
	95, /* /soc/pinctrl@40300000/gpio@40310500 */ \
	96, /* /soc/pinctrl@40300000/gpio@40310580 */ \
	97, /* /soc/pinctrl@40300000/gpio@40310600 */ \
	98, /* /soc/pinctrl@40300000/gpio@40310700 */ \
	99, /* /soc/pinctrl@40300000/hsiom@40300000 */ \
	100, /* /soc/pinctrl@40300000/p3_0_scb2_uart_rx */ \
	101, /* /soc/pinctrl@40300000/p3_1_scb2_uart_tx */ \
	102, /* /soc/pinctrl@40300000/p3_2_scb2_uart_rts */ \
	103, /* /soc/pinctrl@40300000/p3_3_scb2_uart_cts */ \
	105, /* /soc/pinctrl@40300000/gpio@40310180 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_pinctrl DT_N_S_soc_S_pinctrl_40300000
#define DT_N_NODELABEL_pinctrl            DT_N_S_soc_S_pinctrl_40300000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_REG_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_REG_IDX_0_VAL_ADDRESS 1076887552 /* 0x40300000 */
#define DT_N_S_soc_S_pinctrl_40300000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_pinctrl_40300000_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_COMPAT_MATCHES_infineon_cat1_pinctrl 1
#define DT_N_S_soc_S_pinctrl_40300000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_COMPAT_MODEL_IDX_0 "cat1-pinctrl"
#define DT_N_S_soc_S_pinctrl_40300000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible {"infineon,cat1-pinctrl"}
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_IDX_0 "infineon,cat1-pinctrl"
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-pinctrl
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_pinctrl
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_PINCTRL
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_reg {1076887552 /* 0x40300000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_pinctrl_40300000_P_reg_IDX_0 1076887552
#define DT_N_S_soc_S_pinctrl_40300000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_pinctrl_40300000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_PATH "/soc/pinctrl@40300000/gpio@40310000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FULL_NAME "gpio@40310000"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_ORD 31
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_SUPPORTS_ORDS \
	32, /* /gpio_keys/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000
#define DT_N_NODELABEL_gpio_prt0       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REG_IDX_0_VAL_ADDRESS 1076953088 /* 0x40310000 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg {1076953088 /* 0x40310000 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg_IDX_0 1076953088
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts {0 /* 0x0 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_ngpios 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_0_PATH "/gpio_keys/button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_0_FULL_NAME "button_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_0_ORD 32
#define DT_N_S_gpio_keys_S_button_0_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_0_REQUIRES_ORDS \
	27, /* /gpio_keys */ \
	31, /* /soc/pinctrl@40300000/gpio@40310000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_gpio_keys_S_button_0
#define DT_N_NODELABEL_user_bt DT_N_S_gpio_keys_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_gpio_keys_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_label "SW_0"
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_UNQUOTED SW_0
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_TOKEN SW_0
#define DT_N_S_gpio_keys_S_button_0_P_label_STRING_UPPER_TOKEN SW_0
#define DT_N_S_gpio_keys_S_button_0_P_label_IDX_0 "SW_0"
#define DT_N_S_gpio_keys_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button_0, label, 0)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_keys_S_button_0, label, 0)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_keys_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_0_P_label_LEN 1
#define DT_N_S_gpio_keys_S_button_0_P_label_EXISTS 1
#define DT_N_S_gpio_keys_S_button_0_P_zephyr_code 0
#define DT_N_S_gpio_keys_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 33
#define DT_N_S_leds_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	35, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310680
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_PATH "/soc/pinctrl@40300000/gpio@40310680"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FULL_NAME "gpio@40310680"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_ORD 34
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_SUPPORTS_ORDS \
	35, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_EXISTS 1
#define DT_N_INST_6_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680
#define DT_N_NODELABEL_gpio_prt13      DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REG_IDX_0_VAL_ADDRESS 1076954752 /* 0x40310680 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg {1076954752 /* 0x40310680 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg_IDX_0 1076954752
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts {13 /* 0xd */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 35
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	33, /* /leds */ \
	34, /* /soc/pinctrl@40300000/gpio@40310680 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0         DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_user_led DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "LED_0"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED LED_0
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN LED_0
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN LED_0
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "LED_0"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@409d0000
 *
 * Node identifier: DT_N_S_soc_S_adc_409d0000
 *
 * Binding (compatible = infineon,cat1-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\infineon,cat1-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_409d0000_PATH "/soc/adc@409d0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_409d0000_FULL_NAME "adc@409d0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_409d0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_409d0000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_409d0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_409d0000_ORD 36
#define DT_N_S_soc_S_adc_409d0000_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_409d0000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_409d0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_409d0000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_adc DT_N_S_soc_S_adc_409d0000
#define DT_N_NODELABEL_adc0           DT_N_S_soc_S_adc_409d0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_409d0000_REG_NUM 1
#define DT_N_S_soc_S_adc_409d0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_REG_IDX_0_VAL_ADDRESS 1084030976 /* 0x409d0000 */
#define DT_N_S_soc_S_adc_409d0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_adc_409d0000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_409d0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_409d0000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_VAL_irq 155
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_adc_409d0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_COMPAT_MATCHES_infineon_cat1_adc 1
#define DT_N_S_soc_S_adc_409d0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_adc_409d0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_COMPAT_MODEL_IDX_0 "cat1-adc"
#define DT_N_S_soc_S_adc_409d0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_409d0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_409d0000_P_reg {1084030976 /* 0x409d0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_adc_409d0000_P_reg_IDX_0 1084030976
#define DT_N_S_soc_S_adc_409d0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_adc_409d0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_interrupts {155 /* 0x9b */, 6 /* 0x6 */}
#define DT_N_S_soc_S_adc_409d0000_P_interrupts_IDX_0 155
#define DT_N_S_soc_S_adc_409d0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_adc_409d0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_status "disabled"
#define DT_N_S_soc_S_adc_409d0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_409d0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_409d0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_409d0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_409d0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_409d0000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_409d0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_409d0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_409d0000, status, 0)
#define DT_N_S_soc_S_adc_409d0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_409d0000, status, 0)
#define DT_N_S_soc_S_adc_409d0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_409d0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_409d0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_409d0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_409d0000_P_status_LEN 1
#define DT_N_S_soc_S_adc_409d0000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_compatible {"infineon,cat1-adc"}
#define DT_N_S_soc_S_adc_409d0000_P_compatible_IDX_0 "infineon,cat1-adc"
#define DT_N_S_soc_S_adc_409d0000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-adc
#define DT_N_S_soc_S_adc_409d0000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_adc
#define DT_N_S_soc_S_adc_409d0000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_ADC
#define DT_N_S_soc_S_adc_409d0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_409d0000, compatible, 0)
#define DT_N_S_soc_S_adc_409d0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_409d0000, compatible, 0)
#define DT_N_S_soc_S_adc_409d0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_409d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_409d0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_409d0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_409d0000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_409d0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_409d0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_409d0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_409d0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380100
 *
 * Node identifier: DT_N_S_soc_S_counter_40380100
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380100_PATH "/soc/counter@40380100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380100_FULL_NAME "counter@40380100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380100_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380100_ORD 37
#define DT_N_S_soc_S_counter_40380100_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380100_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380100_EXISTS 1
#define DT_N_INST_0_infineon_cat1_counter DT_N_S_soc_S_counter_40380100
#define DT_N_NODELABEL_counter0_0         DT_N_S_soc_S_counter_40380100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380100_REG_NUM 1
#define DT_N_S_soc_S_counter_40380100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_REG_IDX_0_VAL_ADDRESS 1077412096 /* 0x40380100 */
#define DT_N_S_soc_S_counter_40380100_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380100_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380100_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_VAL_irq 123
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380100_P_resolution 32
#define DT_N_S_soc_S_counter_40380100_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_status "okay"
#define DT_N_S_soc_S_counter_40380100_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_counter_40380100_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_counter_40380100_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_40380100_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_counter_40380100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_counter_40380100_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_counter_40380100_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_counter_40380100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380100, status, 0)
#define DT_N_S_soc_S_counter_40380100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380100, status, 0)
#define DT_N_S_soc_S_counter_40380100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380100_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380100_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380100_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380100_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380100_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380100_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380100, compatible, 0)
#define DT_N_S_soc_S_counter_40380100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380100, compatible, 0)
#define DT_N_S_soc_S_counter_40380100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380100_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_reg {1077412096 /* 0x40380100 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380100_P_reg_IDX_0 1077412096
#define DT_N_S_soc_S_counter_40380100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_interrupts {123 /* 0x7b */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380100_P_interrupts_IDX_0 123
#define DT_N_S_soc_S_counter_40380100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380140
 *
 * Node identifier: DT_N_S_soc_S_counter_40380140
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380140_PATH "/soc/counter@40380140"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380140_FULL_NAME "counter@40380140"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380140_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380140_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380140_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380140_ORD 38
#define DT_N_S_soc_S_counter_40380140_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380140_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380140_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380140_EXISTS 1
#define DT_N_INST_1_infineon_cat1_counter DT_N_S_soc_S_counter_40380140
#define DT_N_NODELABEL_counter0_1         DT_N_S_soc_S_counter_40380140

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380140_REG_NUM 1
#define DT_N_S_soc_S_counter_40380140_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_REG_IDX_0_VAL_ADDRESS 1077412160 /* 0x40380140 */
#define DT_N_S_soc_S_counter_40380140_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380140_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380140_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380140_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_VAL_irq 124
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380140_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380140_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380140_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380140_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380140_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380140_P_resolution 32
#define DT_N_S_soc_S_counter_40380140_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_status "disabled"
#define DT_N_S_soc_S_counter_40380140_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40380140_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40380140_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380140_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40380140_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40380140_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40380140_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380140_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380140, status, 0)
#define DT_N_S_soc_S_counter_40380140_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380140, status, 0)
#define DT_N_S_soc_S_counter_40380140_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380140, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380140_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380140, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380140_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380140_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380140_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380140_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380140_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380140_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380140_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380140, compatible, 0)
#define DT_N_S_soc_S_counter_40380140_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380140, compatible, 0)
#define DT_N_S_soc_S_counter_40380140_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380140, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380140_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380140, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380140_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380140_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_reg {1077412160 /* 0x40380140 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380140_P_reg_IDX_0 1077412160
#define DT_N_S_soc_S_counter_40380140_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380140_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_interrupts {124 /* 0x7c */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380140_P_interrupts_IDX_0 124
#define DT_N_S_soc_S_counter_40380140_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380140_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380140_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380140_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380140_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380180
 *
 * Node identifier: DT_N_S_soc_S_counter_40380180
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380180_PATH "/soc/counter@40380180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380180_FULL_NAME "counter@40380180"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380180_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380180_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380180_ORD 39
#define DT_N_S_soc_S_counter_40380180_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380180_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380180_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380180_EXISTS 1
#define DT_N_INST_2_infineon_cat1_counter DT_N_S_soc_S_counter_40380180
#define DT_N_NODELABEL_counter0_2         DT_N_S_soc_S_counter_40380180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380180_REG_NUM 1
#define DT_N_S_soc_S_counter_40380180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_REG_IDX_0_VAL_ADDRESS 1077412224 /* 0x40380180 */
#define DT_N_S_soc_S_counter_40380180_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380180_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380180_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_VAL_irq 125
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380180_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380180_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380180_P_resolution 32
#define DT_N_S_soc_S_counter_40380180_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_status "disabled"
#define DT_N_S_soc_S_counter_40380180_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40380180_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40380180_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380180_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40380180_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40380180_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40380180_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380180_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380180, status, 0)
#define DT_N_S_soc_S_counter_40380180_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380180, status, 0)
#define DT_N_S_soc_S_counter_40380180_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380180_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380180_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380180_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380180_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380180_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380180_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380180_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380180, compatible, 0)
#define DT_N_S_soc_S_counter_40380180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380180, compatible, 0)
#define DT_N_S_soc_S_counter_40380180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380180_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_reg {1077412224 /* 0x40380180 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380180_P_reg_IDX_0 1077412224
#define DT_N_S_soc_S_counter_40380180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_interrupts {125 /* 0x7d */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380180_P_interrupts_IDX_0 125
#define DT_N_S_soc_S_counter_40380180_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380180_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403801c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403801c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403801c0_PATH "/soc/counter@403801c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403801c0_FULL_NAME "counter@403801c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403801c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403801c0_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403801c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403801c0_ORD 40
#define DT_N_S_soc_S_counter_403801c0_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403801c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403801c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403801c0_EXISTS 1
#define DT_N_INST_3_infineon_cat1_counter DT_N_S_soc_S_counter_403801c0
#define DT_N_NODELABEL_counter0_3         DT_N_S_soc_S_counter_403801c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403801c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403801c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_REG_IDX_0_VAL_ADDRESS 1077412288 /* 0x403801c0 */
#define DT_N_S_soc_S_counter_403801c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403801c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403801c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403801c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_VAL_irq 126
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403801c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403801c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403801c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403801c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403801c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403801c0_P_resolution 32
#define DT_N_S_soc_S_counter_403801c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403801c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403801c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403801c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403801c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403801c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403801c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403801c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403801c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403801c0, status, 0)
#define DT_N_S_soc_S_counter_403801c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403801c0, status, 0)
#define DT_N_S_soc_S_counter_403801c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403801c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403801c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403801c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403801c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403801c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403801c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403801c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403801c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403801c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403801c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403801c0, compatible, 0)
#define DT_N_S_soc_S_counter_403801c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403801c0, compatible, 0)
#define DT_N_S_soc_S_counter_403801c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403801c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403801c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403801c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403801c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403801c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_reg {1077412288 /* 0x403801c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403801c0_P_reg_IDX_0 1077412288
#define DT_N_S_soc_S_counter_403801c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403801c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_interrupts {126 /* 0x7e */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403801c0_P_interrupts_IDX_0 126
#define DT_N_S_soc_S_counter_403801c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403801c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403801c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403801c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403801c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380200
 *
 * Node identifier: DT_N_S_soc_S_counter_40380200
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380200_PATH "/soc/counter@40380200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380200_FULL_NAME "counter@40380200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380200_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380200_ORD 41
#define DT_N_S_soc_S_counter_40380200_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380200_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380200_EXISTS 1
#define DT_N_INST_4_infineon_cat1_counter DT_N_S_soc_S_counter_40380200
#define DT_N_NODELABEL_counter0_4         DT_N_S_soc_S_counter_40380200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380200_REG_NUM 1
#define DT_N_S_soc_S_counter_40380200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_REG_IDX_0_VAL_ADDRESS 1077412352 /* 0x40380200 */
#define DT_N_S_soc_S_counter_40380200_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380200_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380200_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_VAL_irq 127
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380200_P_resolution 32
#define DT_N_S_soc_S_counter_40380200_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_status "disabled"
#define DT_N_S_soc_S_counter_40380200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40380200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40380200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40380200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40380200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40380200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380200, status, 0)
#define DT_N_S_soc_S_counter_40380200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380200, status, 0)
#define DT_N_S_soc_S_counter_40380200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380200_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380200_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380200_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380200_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380200_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380200_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380200, compatible, 0)
#define DT_N_S_soc_S_counter_40380200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380200, compatible, 0)
#define DT_N_S_soc_S_counter_40380200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380200_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_reg {1077412352 /* 0x40380200 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380200_P_reg_IDX_0 1077412352
#define DT_N_S_soc_S_counter_40380200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_interrupts {127 /* 0x7f */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380200_P_interrupts_IDX_0 127
#define DT_N_S_soc_S_counter_40380200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380240
 *
 * Node identifier: DT_N_S_soc_S_counter_40380240
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380240_PATH "/soc/counter@40380240"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380240_FULL_NAME "counter@40380240"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380240_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380240_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380240_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380240_ORD 42
#define DT_N_S_soc_S_counter_40380240_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380240_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380240_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380240_EXISTS 1
#define DT_N_INST_5_infineon_cat1_counter DT_N_S_soc_S_counter_40380240
#define DT_N_NODELABEL_counter0_5         DT_N_S_soc_S_counter_40380240

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380240_REG_NUM 1
#define DT_N_S_soc_S_counter_40380240_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_REG_IDX_0_VAL_ADDRESS 1077412416 /* 0x40380240 */
#define DT_N_S_soc_S_counter_40380240_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380240_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380240_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380240_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_VAL_irq 128
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380240_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380240_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380240_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380240_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380240_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380240_P_resolution 32
#define DT_N_S_soc_S_counter_40380240_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_status "disabled"
#define DT_N_S_soc_S_counter_40380240_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40380240_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40380240_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380240_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40380240_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40380240_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40380240_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380240_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380240, status, 0)
#define DT_N_S_soc_S_counter_40380240_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380240, status, 0)
#define DT_N_S_soc_S_counter_40380240_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380240, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380240_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380240, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380240_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380240_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380240_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380240_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380240_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380240_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380240_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380240, compatible, 0)
#define DT_N_S_soc_S_counter_40380240_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380240, compatible, 0)
#define DT_N_S_soc_S_counter_40380240_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380240, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380240_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380240, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380240_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380240_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_reg {1077412416 /* 0x40380240 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380240_P_reg_IDX_0 1077412416
#define DT_N_S_soc_S_counter_40380240_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380240_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_interrupts {128 /* 0x80 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380240_P_interrupts_IDX_0 128
#define DT_N_S_soc_S_counter_40380240_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380240_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380240_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380240_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380240_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40380280
 *
 * Node identifier: DT_N_S_soc_S_counter_40380280
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40380280_PATH "/soc/counter@40380280"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40380280_FULL_NAME "counter@40380280"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40380280_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40380280_CHILD_IDX 24

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40380280_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40380280_ORD 43
#define DT_N_S_soc_S_counter_40380280_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40380280_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40380280_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40380280_EXISTS 1
#define DT_N_INST_6_infineon_cat1_counter DT_N_S_soc_S_counter_40380280
#define DT_N_NODELABEL_counter0_6         DT_N_S_soc_S_counter_40380280

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40380280_REG_NUM 1
#define DT_N_S_soc_S_counter_40380280_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_REG_IDX_0_VAL_ADDRESS 1077412480 /* 0x40380280 */
#define DT_N_S_soc_S_counter_40380280_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40380280_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40380280_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40380280_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_VAL_irq 129
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40380280_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40380280_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40380280_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40380280_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40380280_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40380280_P_resolution 32
#define DT_N_S_soc_S_counter_40380280_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_status "disabled"
#define DT_N_S_soc_S_counter_40380280_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40380280_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40380280_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380280_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40380280_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40380280_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40380280_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40380280_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380280, status, 0)
#define DT_N_S_soc_S_counter_40380280_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380280, status, 0)
#define DT_N_S_soc_S_counter_40380280_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380280_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380280_P_status_LEN 1
#define DT_N_S_soc_S_counter_40380280_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40380280_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40380280_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40380280_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40380280_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40380280_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40380280, compatible, 0)
#define DT_N_S_soc_S_counter_40380280_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40380280, compatible, 0)
#define DT_N_S_soc_S_counter_40380280_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40380280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380280_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40380280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40380280_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40380280_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_reg {1077412480 /* 0x40380280 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40380280_P_reg_IDX_0 1077412480
#define DT_N_S_soc_S_counter_40380280_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40380280_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_interrupts {129 /* 0x81 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40380280_P_interrupts_IDX_0 129
#define DT_N_S_soc_S_counter_40380280_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40380280_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40380280_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40380280_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40380280_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403802c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403802c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403802c0_PATH "/soc/counter@403802c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403802c0_FULL_NAME "counter@403802c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403802c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403802c0_CHILD_IDX 25

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403802c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403802c0_ORD 44
#define DT_N_S_soc_S_counter_403802c0_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403802c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403802c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403802c0_EXISTS 1
#define DT_N_INST_7_infineon_cat1_counter DT_N_S_soc_S_counter_403802c0
#define DT_N_NODELABEL_counter0_7         DT_N_S_soc_S_counter_403802c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403802c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403802c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_REG_IDX_0_VAL_ADDRESS 1077412544 /* 0x403802c0 */
#define DT_N_S_soc_S_counter_403802c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403802c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403802c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403802c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_VAL_irq 130
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403802c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403802c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403802c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403802c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403802c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403802c0_P_resolution 32
#define DT_N_S_soc_S_counter_403802c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403802c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403802c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403802c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403802c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403802c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403802c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403802c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403802c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403802c0, status, 0)
#define DT_N_S_soc_S_counter_403802c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403802c0, status, 0)
#define DT_N_S_soc_S_counter_403802c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403802c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403802c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403802c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403802c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403802c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403802c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403802c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403802c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403802c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403802c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403802c0, compatible, 0)
#define DT_N_S_soc_S_counter_403802c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403802c0, compatible, 0)
#define DT_N_S_soc_S_counter_403802c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403802c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403802c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403802c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403802c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403802c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_reg {1077412544 /* 0x403802c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403802c0_P_reg_IDX_0 1077412544
#define DT_N_S_soc_S_counter_403802c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403802c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_interrupts {130 /* 0x82 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403802c0_P_interrupts_IDX_0 130
#define DT_N_S_soc_S_counter_403802c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403802c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403802c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403802c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403802c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390100
 *
 * Node identifier: DT_N_S_soc_S_counter_40390100
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390100_PATH "/soc/counter@40390100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390100_FULL_NAME "counter@40390100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390100_CHILD_IDX 26

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390100_ORD 45
#define DT_N_S_soc_S_counter_40390100_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390100_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390100_EXISTS 1
#define DT_N_INST_8_infineon_cat1_counter DT_N_S_soc_S_counter_40390100
#define DT_N_NODELABEL_counter1_0         DT_N_S_soc_S_counter_40390100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390100_REG_NUM 1
#define DT_N_S_soc_S_counter_40390100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_REG_IDX_0_VAL_ADDRESS 1077477632 /* 0x40390100 */
#define DT_N_S_soc_S_counter_40390100_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390100_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390100_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_VAL_irq 131
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390100_P_resolution 16
#define DT_N_S_soc_S_counter_40390100_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_status "disabled"
#define DT_N_S_soc_S_counter_40390100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390100_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390100, status, 0)
#define DT_N_S_soc_S_counter_40390100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390100, status, 0)
#define DT_N_S_soc_S_counter_40390100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390100_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390100_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390100_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390100_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390100_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390100_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390100, compatible, 0)
#define DT_N_S_soc_S_counter_40390100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390100, compatible, 0)
#define DT_N_S_soc_S_counter_40390100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390100_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_reg {1077477632 /* 0x40390100 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390100_P_reg_IDX_0 1077477632
#define DT_N_S_soc_S_counter_40390100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_interrupts {131 /* 0x83 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390100_P_interrupts_IDX_0 131
#define DT_N_S_soc_S_counter_40390100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390140
 *
 * Node identifier: DT_N_S_soc_S_counter_40390140
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390140_PATH "/soc/counter@40390140"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390140_FULL_NAME "counter@40390140"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390140_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390140_CHILD_IDX 27

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390140_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390140_ORD 46
#define DT_N_S_soc_S_counter_40390140_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390140_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390140_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390140_EXISTS 1
#define DT_N_INST_9_infineon_cat1_counter DT_N_S_soc_S_counter_40390140
#define DT_N_NODELABEL_counter1_1         DT_N_S_soc_S_counter_40390140

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390140_REG_NUM 1
#define DT_N_S_soc_S_counter_40390140_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_REG_IDX_0_VAL_ADDRESS 1077477696 /* 0x40390140 */
#define DT_N_S_soc_S_counter_40390140_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390140_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390140_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390140_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_VAL_irq 132
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390140_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390140_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390140_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390140_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390140_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390140_P_resolution 16
#define DT_N_S_soc_S_counter_40390140_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_status "disabled"
#define DT_N_S_soc_S_counter_40390140_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390140_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390140_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390140_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390140_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390140_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390140_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390140_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390140, status, 0)
#define DT_N_S_soc_S_counter_40390140_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390140, status, 0)
#define DT_N_S_soc_S_counter_40390140_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390140, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390140_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390140, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390140_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390140_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390140_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390140_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390140_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390140_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390140_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390140, compatible, 0)
#define DT_N_S_soc_S_counter_40390140_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390140, compatible, 0)
#define DT_N_S_soc_S_counter_40390140_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390140, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390140_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390140, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390140_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390140_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_reg {1077477696 /* 0x40390140 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390140_P_reg_IDX_0 1077477696
#define DT_N_S_soc_S_counter_40390140_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390140_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_interrupts {132 /* 0x84 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390140_P_interrupts_IDX_0 132
#define DT_N_S_soc_S_counter_40390140_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390140_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390140_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390140_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390140_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390180
 *
 * Node identifier: DT_N_S_soc_S_counter_40390180
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390180_PATH "/soc/counter@40390180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390180_FULL_NAME "counter@40390180"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390180_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390180_CHILD_IDX 28

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390180_ORD 47
#define DT_N_S_soc_S_counter_40390180_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390180_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390180_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390180_EXISTS 1
#define DT_N_INST_10_infineon_cat1_counter DT_N_S_soc_S_counter_40390180
#define DT_N_NODELABEL_counter1_2          DT_N_S_soc_S_counter_40390180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390180_REG_NUM 1
#define DT_N_S_soc_S_counter_40390180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_REG_IDX_0_VAL_ADDRESS 1077477760 /* 0x40390180 */
#define DT_N_S_soc_S_counter_40390180_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390180_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390180_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_VAL_irq 133
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390180_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390180_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390180_P_resolution 16
#define DT_N_S_soc_S_counter_40390180_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_status "disabled"
#define DT_N_S_soc_S_counter_40390180_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390180_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390180_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390180_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390180_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390180_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390180_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390180_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390180, status, 0)
#define DT_N_S_soc_S_counter_40390180_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390180, status, 0)
#define DT_N_S_soc_S_counter_40390180_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390180_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390180_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390180_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390180_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390180_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390180_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390180_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390180, compatible, 0)
#define DT_N_S_soc_S_counter_40390180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390180, compatible, 0)
#define DT_N_S_soc_S_counter_40390180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390180_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_reg {1077477760 /* 0x40390180 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390180_P_reg_IDX_0 1077477760
#define DT_N_S_soc_S_counter_40390180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_interrupts {133 /* 0x85 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390180_P_interrupts_IDX_0 133
#define DT_N_S_soc_S_counter_40390180_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390180_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403901c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403901c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403901c0_PATH "/soc/counter@403901c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403901c0_FULL_NAME "counter@403901c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403901c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403901c0_CHILD_IDX 29

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403901c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403901c0_ORD 48
#define DT_N_S_soc_S_counter_403901c0_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403901c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403901c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403901c0_EXISTS 1
#define DT_N_INST_11_infineon_cat1_counter DT_N_S_soc_S_counter_403901c0
#define DT_N_NODELABEL_counter1_3          DT_N_S_soc_S_counter_403901c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403901c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403901c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_REG_IDX_0_VAL_ADDRESS 1077477824 /* 0x403901c0 */
#define DT_N_S_soc_S_counter_403901c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403901c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403901c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403901c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_VAL_irq 134
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403901c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403901c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403901c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403901c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403901c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403901c0_P_resolution 16
#define DT_N_S_soc_S_counter_403901c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403901c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403901c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403901c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403901c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403901c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403901c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403901c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403901c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403901c0, status, 0)
#define DT_N_S_soc_S_counter_403901c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403901c0, status, 0)
#define DT_N_S_soc_S_counter_403901c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403901c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403901c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403901c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403901c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403901c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403901c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403901c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403901c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403901c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403901c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403901c0, compatible, 0)
#define DT_N_S_soc_S_counter_403901c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403901c0, compatible, 0)
#define DT_N_S_soc_S_counter_403901c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403901c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403901c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403901c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403901c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403901c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_reg {1077477824 /* 0x403901c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403901c0_P_reg_IDX_0 1077477824
#define DT_N_S_soc_S_counter_403901c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403901c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_interrupts {134 /* 0x86 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403901c0_P_interrupts_IDX_0 134
#define DT_N_S_soc_S_counter_403901c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403901c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403901c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403901c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403901c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390200
 *
 * Node identifier: DT_N_S_soc_S_counter_40390200
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390200_PATH "/soc/counter@40390200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390200_FULL_NAME "counter@40390200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390200_CHILD_IDX 30

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390200_ORD 49
#define DT_N_S_soc_S_counter_40390200_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390200_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390200_EXISTS 1
#define DT_N_INST_12_infineon_cat1_counter DT_N_S_soc_S_counter_40390200
#define DT_N_NODELABEL_counter1_4          DT_N_S_soc_S_counter_40390200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390200_REG_NUM 1
#define DT_N_S_soc_S_counter_40390200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_REG_IDX_0_VAL_ADDRESS 1077477888 /* 0x40390200 */
#define DT_N_S_soc_S_counter_40390200_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390200_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390200_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_VAL_irq 135
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390200_P_resolution 16
#define DT_N_S_soc_S_counter_40390200_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_status "disabled"
#define DT_N_S_soc_S_counter_40390200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390200, status, 0)
#define DT_N_S_soc_S_counter_40390200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390200, status, 0)
#define DT_N_S_soc_S_counter_40390200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390200_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390200_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390200_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390200_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390200_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390200_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390200, compatible, 0)
#define DT_N_S_soc_S_counter_40390200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390200, compatible, 0)
#define DT_N_S_soc_S_counter_40390200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390200_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_reg {1077477888 /* 0x40390200 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390200_P_reg_IDX_0 1077477888
#define DT_N_S_soc_S_counter_40390200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_interrupts {135 /* 0x87 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390200_P_interrupts_IDX_0 135
#define DT_N_S_soc_S_counter_40390200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390240
 *
 * Node identifier: DT_N_S_soc_S_counter_40390240
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390240_PATH "/soc/counter@40390240"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390240_FULL_NAME "counter@40390240"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390240_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390240_CHILD_IDX 31

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390240_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390240_ORD 50
#define DT_N_S_soc_S_counter_40390240_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390240_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390240_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390240_EXISTS 1
#define DT_N_INST_13_infineon_cat1_counter DT_N_S_soc_S_counter_40390240
#define DT_N_NODELABEL_counter1_5          DT_N_S_soc_S_counter_40390240

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390240_REG_NUM 1
#define DT_N_S_soc_S_counter_40390240_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_REG_IDX_0_VAL_ADDRESS 1077477952 /* 0x40390240 */
#define DT_N_S_soc_S_counter_40390240_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390240_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390240_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390240_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_VAL_irq 136
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390240_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390240_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390240_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390240_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390240_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390240_P_resolution 16
#define DT_N_S_soc_S_counter_40390240_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_status "disabled"
#define DT_N_S_soc_S_counter_40390240_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390240_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390240_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390240_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390240_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390240_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390240_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390240_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390240, status, 0)
#define DT_N_S_soc_S_counter_40390240_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390240, status, 0)
#define DT_N_S_soc_S_counter_40390240_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390240, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390240_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390240, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390240_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390240_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390240_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390240_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390240_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390240_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390240_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390240, compatible, 0)
#define DT_N_S_soc_S_counter_40390240_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390240, compatible, 0)
#define DT_N_S_soc_S_counter_40390240_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390240, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390240_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390240, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390240_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390240_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_reg {1077477952 /* 0x40390240 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390240_P_reg_IDX_0 1077477952
#define DT_N_S_soc_S_counter_40390240_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390240_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_interrupts {136 /* 0x88 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390240_P_interrupts_IDX_0 136
#define DT_N_S_soc_S_counter_40390240_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390240_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390240_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390240_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390240_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390280
 *
 * Node identifier: DT_N_S_soc_S_counter_40390280
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390280_PATH "/soc/counter@40390280"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390280_FULL_NAME "counter@40390280"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390280_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390280_CHILD_IDX 32

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390280_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390280_ORD 51
#define DT_N_S_soc_S_counter_40390280_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390280_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390280_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390280_EXISTS 1
#define DT_N_INST_14_infineon_cat1_counter DT_N_S_soc_S_counter_40390280
#define DT_N_NODELABEL_counter1_6          DT_N_S_soc_S_counter_40390280

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390280_REG_NUM 1
#define DT_N_S_soc_S_counter_40390280_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_REG_IDX_0_VAL_ADDRESS 1077478016 /* 0x40390280 */
#define DT_N_S_soc_S_counter_40390280_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390280_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390280_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390280_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_VAL_irq 137
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390280_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390280_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390280_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390280_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390280_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390280_P_resolution 16
#define DT_N_S_soc_S_counter_40390280_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_status "disabled"
#define DT_N_S_soc_S_counter_40390280_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390280_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390280_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390280_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390280_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390280_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390280_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390280_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390280, status, 0)
#define DT_N_S_soc_S_counter_40390280_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390280, status, 0)
#define DT_N_S_soc_S_counter_40390280_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390280_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390280_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390280_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390280_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390280_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390280_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390280_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390280_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390280, compatible, 0)
#define DT_N_S_soc_S_counter_40390280_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390280, compatible, 0)
#define DT_N_S_soc_S_counter_40390280_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390280_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390280_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390280_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_reg {1077478016 /* 0x40390280 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390280_P_reg_IDX_0 1077478016
#define DT_N_S_soc_S_counter_40390280_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390280_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_interrupts {137 /* 0x89 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390280_P_interrupts_IDX_0 137
#define DT_N_S_soc_S_counter_40390280_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390280_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390280_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390280_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390280_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403902c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403902c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403902c0_PATH "/soc/counter@403902c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403902c0_FULL_NAME "counter@403902c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403902c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403902c0_CHILD_IDX 33

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403902c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403902c0_ORD 52
#define DT_N_S_soc_S_counter_403902c0_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403902c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403902c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403902c0_EXISTS 1
#define DT_N_INST_15_infineon_cat1_counter DT_N_S_soc_S_counter_403902c0
#define DT_N_NODELABEL_counter1_7          DT_N_S_soc_S_counter_403902c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403902c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403902c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_REG_IDX_0_VAL_ADDRESS 1077478080 /* 0x403902c0 */
#define DT_N_S_soc_S_counter_403902c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403902c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403902c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403902c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_VAL_irq 138
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403902c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403902c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403902c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403902c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403902c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403902c0_P_resolution 16
#define DT_N_S_soc_S_counter_403902c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403902c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403902c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403902c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403902c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403902c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403902c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403902c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403902c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403902c0, status, 0)
#define DT_N_S_soc_S_counter_403902c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403902c0, status, 0)
#define DT_N_S_soc_S_counter_403902c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403902c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403902c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403902c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403902c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403902c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403902c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403902c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403902c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403902c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403902c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403902c0, compatible, 0)
#define DT_N_S_soc_S_counter_403902c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403902c0, compatible, 0)
#define DT_N_S_soc_S_counter_403902c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403902c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403902c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403902c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403902c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403902c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_reg {1077478080 /* 0x403902c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403902c0_P_reg_IDX_0 1077478080
#define DT_N_S_soc_S_counter_403902c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403902c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_interrupts {138 /* 0x8a */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403902c0_P_interrupts_IDX_0 138
#define DT_N_S_soc_S_counter_403902c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403902c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403902c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403902c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403902c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390300
 *
 * Node identifier: DT_N_S_soc_S_counter_40390300
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390300_PATH "/soc/counter@40390300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390300_FULL_NAME "counter@40390300"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390300_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390300_CHILD_IDX 34

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390300_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390300_ORD 53
#define DT_N_S_soc_S_counter_40390300_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390300_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390300_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390300_EXISTS 1
#define DT_N_INST_16_infineon_cat1_counter DT_N_S_soc_S_counter_40390300
#define DT_N_NODELABEL_counter1_8          DT_N_S_soc_S_counter_40390300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390300_REG_NUM 1
#define DT_N_S_soc_S_counter_40390300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_REG_IDX_0_VAL_ADDRESS 1077478144 /* 0x40390300 */
#define DT_N_S_soc_S_counter_40390300_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390300_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390300_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_VAL_irq 139
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390300_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390300_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390300_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390300_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390300_P_resolution 16
#define DT_N_S_soc_S_counter_40390300_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_status "disabled"
#define DT_N_S_soc_S_counter_40390300_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390300_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390300_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390300_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390300_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390300_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390300_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390300, status, 0)
#define DT_N_S_soc_S_counter_40390300_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390300, status, 0)
#define DT_N_S_soc_S_counter_40390300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390300_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390300_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390300_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390300_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390300_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390300_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390300_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390300, compatible, 0)
#define DT_N_S_soc_S_counter_40390300_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390300, compatible, 0)
#define DT_N_S_soc_S_counter_40390300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390300_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390300_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_reg {1077478144 /* 0x40390300 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390300_P_reg_IDX_0 1077478144
#define DT_N_S_soc_S_counter_40390300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_interrupts {139 /* 0x8b */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390300_P_interrupts_IDX_0 139
#define DT_N_S_soc_S_counter_40390300_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390300_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390300_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390300_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390300_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390340
 *
 * Node identifier: DT_N_S_soc_S_counter_40390340
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390340_PATH "/soc/counter@40390340"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390340_FULL_NAME "counter@40390340"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390340_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390340_CHILD_IDX 35

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390340_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390340_ORD 54
#define DT_N_S_soc_S_counter_40390340_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390340_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390340_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390340_EXISTS 1
#define DT_N_INST_17_infineon_cat1_counter DT_N_S_soc_S_counter_40390340
#define DT_N_NODELABEL_counter1_9          DT_N_S_soc_S_counter_40390340

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390340_REG_NUM 1
#define DT_N_S_soc_S_counter_40390340_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_REG_IDX_0_VAL_ADDRESS 1077478208 /* 0x40390340 */
#define DT_N_S_soc_S_counter_40390340_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390340_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390340_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390340_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_VAL_irq 140
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390340_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390340_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390340_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390340_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390340_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390340_P_resolution 16
#define DT_N_S_soc_S_counter_40390340_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_status "disabled"
#define DT_N_S_soc_S_counter_40390340_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390340_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390340_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390340_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390340_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390340_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390340_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390340_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390340, status, 0)
#define DT_N_S_soc_S_counter_40390340_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390340, status, 0)
#define DT_N_S_soc_S_counter_40390340_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390340, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390340_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390340, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390340_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390340_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390340_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390340_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390340_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390340_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390340_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390340, compatible, 0)
#define DT_N_S_soc_S_counter_40390340_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390340, compatible, 0)
#define DT_N_S_soc_S_counter_40390340_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390340, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390340_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390340, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390340_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390340_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_reg {1077478208 /* 0x40390340 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390340_P_reg_IDX_0 1077478208
#define DT_N_S_soc_S_counter_40390340_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390340_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_interrupts {140 /* 0x8c */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390340_P_interrupts_IDX_0 140
#define DT_N_S_soc_S_counter_40390340_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390340_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390340_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390340_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390340_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390380
 *
 * Node identifier: DT_N_S_soc_S_counter_40390380
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390380_PATH "/soc/counter@40390380"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390380_FULL_NAME "counter@40390380"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390380_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390380_CHILD_IDX 36

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390380_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390380_ORD 55
#define DT_N_S_soc_S_counter_40390380_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390380_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390380_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390380_EXISTS 1
#define DT_N_INST_18_infineon_cat1_counter DT_N_S_soc_S_counter_40390380
#define DT_N_NODELABEL_counter1_10         DT_N_S_soc_S_counter_40390380

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390380_REG_NUM 1
#define DT_N_S_soc_S_counter_40390380_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_REG_IDX_0_VAL_ADDRESS 1077478272 /* 0x40390380 */
#define DT_N_S_soc_S_counter_40390380_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390380_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390380_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390380_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_VAL_irq 141
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390380_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390380_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390380_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390380_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390380_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390380_P_resolution 16
#define DT_N_S_soc_S_counter_40390380_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_status "disabled"
#define DT_N_S_soc_S_counter_40390380_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390380_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390380_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390380_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390380_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390380_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390380_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390380_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390380, status, 0)
#define DT_N_S_soc_S_counter_40390380_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390380, status, 0)
#define DT_N_S_soc_S_counter_40390380_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390380, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390380_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390380, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390380_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390380_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390380_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390380_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390380_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390380_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390380_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390380, compatible, 0)
#define DT_N_S_soc_S_counter_40390380_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390380, compatible, 0)
#define DT_N_S_soc_S_counter_40390380_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390380, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390380_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390380, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390380_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390380_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_reg {1077478272 /* 0x40390380 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390380_P_reg_IDX_0 1077478272
#define DT_N_S_soc_S_counter_40390380_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390380_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_interrupts {141 /* 0x8d */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390380_P_interrupts_IDX_0 141
#define DT_N_S_soc_S_counter_40390380_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390380_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390380_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390380_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390380_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403903c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403903c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403903c0_PATH "/soc/counter@403903c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403903c0_FULL_NAME "counter@403903c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403903c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403903c0_CHILD_IDX 37

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403903c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403903c0_ORD 56
#define DT_N_S_soc_S_counter_403903c0_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403903c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403903c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403903c0_EXISTS 1
#define DT_N_INST_19_infineon_cat1_counter DT_N_S_soc_S_counter_403903c0
#define DT_N_NODELABEL_counter1_11         DT_N_S_soc_S_counter_403903c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403903c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403903c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_REG_IDX_0_VAL_ADDRESS 1077478336 /* 0x403903c0 */
#define DT_N_S_soc_S_counter_403903c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403903c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403903c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403903c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_VAL_irq 142
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403903c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403903c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403903c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403903c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403903c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403903c0_P_resolution 16
#define DT_N_S_soc_S_counter_403903c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403903c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403903c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403903c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403903c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403903c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403903c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403903c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403903c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403903c0, status, 0)
#define DT_N_S_soc_S_counter_403903c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403903c0, status, 0)
#define DT_N_S_soc_S_counter_403903c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403903c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403903c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403903c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403903c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403903c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403903c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403903c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403903c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403903c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403903c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403903c0, compatible, 0)
#define DT_N_S_soc_S_counter_403903c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403903c0, compatible, 0)
#define DT_N_S_soc_S_counter_403903c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403903c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403903c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403903c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403903c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403903c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_reg {1077478336 /* 0x403903c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403903c0_P_reg_IDX_0 1077478336
#define DT_N_S_soc_S_counter_403903c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403903c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_interrupts {142 /* 0x8e */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403903c0_P_interrupts_IDX_0 142
#define DT_N_S_soc_S_counter_403903c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403903c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403903c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403903c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403903c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390400
 *
 * Node identifier: DT_N_S_soc_S_counter_40390400
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390400_PATH "/soc/counter@40390400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390400_FULL_NAME "counter@40390400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390400_CHILD_IDX 38

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390400_ORD 57
#define DT_N_S_soc_S_counter_40390400_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390400_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390400_EXISTS 1
#define DT_N_INST_20_infineon_cat1_counter DT_N_S_soc_S_counter_40390400
#define DT_N_NODELABEL_counter1_12         DT_N_S_soc_S_counter_40390400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390400_REG_NUM 1
#define DT_N_S_soc_S_counter_40390400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_REG_IDX_0_VAL_ADDRESS 1077478400 /* 0x40390400 */
#define DT_N_S_soc_S_counter_40390400_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390400_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390400_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_VAL_irq 143
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390400_P_resolution 16
#define DT_N_S_soc_S_counter_40390400_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_status "disabled"
#define DT_N_S_soc_S_counter_40390400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390400, status, 0)
#define DT_N_S_soc_S_counter_40390400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390400, status, 0)
#define DT_N_S_soc_S_counter_40390400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390400_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390400_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390400_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390400_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390400_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390400_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390400, compatible, 0)
#define DT_N_S_soc_S_counter_40390400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390400, compatible, 0)
#define DT_N_S_soc_S_counter_40390400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390400_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_reg {1077478400 /* 0x40390400 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390400_P_reg_IDX_0 1077478400
#define DT_N_S_soc_S_counter_40390400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_interrupts {143 /* 0x8f */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390400_P_interrupts_IDX_0 143
#define DT_N_S_soc_S_counter_40390400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390440
 *
 * Node identifier: DT_N_S_soc_S_counter_40390440
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390440_PATH "/soc/counter@40390440"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390440_FULL_NAME "counter@40390440"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390440_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390440_CHILD_IDX 39

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390440_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390440_ORD 58
#define DT_N_S_soc_S_counter_40390440_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390440_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390440_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390440_EXISTS 1
#define DT_N_INST_21_infineon_cat1_counter DT_N_S_soc_S_counter_40390440
#define DT_N_NODELABEL_counter1_13         DT_N_S_soc_S_counter_40390440

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390440_REG_NUM 1
#define DT_N_S_soc_S_counter_40390440_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_REG_IDX_0_VAL_ADDRESS 1077478464 /* 0x40390440 */
#define DT_N_S_soc_S_counter_40390440_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390440_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390440_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390440_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_VAL_irq 144
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390440_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390440_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390440_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390440_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390440_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390440_P_resolution 16
#define DT_N_S_soc_S_counter_40390440_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_status "disabled"
#define DT_N_S_soc_S_counter_40390440_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390440_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390440_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390440_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390440_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390440_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390440_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390440_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390440, status, 0)
#define DT_N_S_soc_S_counter_40390440_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390440, status, 0)
#define DT_N_S_soc_S_counter_40390440_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390440, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390440_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390440, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390440_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390440_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390440_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390440_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390440_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390440_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390440_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390440, compatible, 0)
#define DT_N_S_soc_S_counter_40390440_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390440, compatible, 0)
#define DT_N_S_soc_S_counter_40390440_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390440, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390440_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390440, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390440_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390440_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_reg {1077478464 /* 0x40390440 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390440_P_reg_IDX_0 1077478464
#define DT_N_S_soc_S_counter_40390440_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390440_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_interrupts {144 /* 0x90 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390440_P_interrupts_IDX_0 144
#define DT_N_S_soc_S_counter_40390440_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390440_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390440_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390440_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390440_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390480
 *
 * Node identifier: DT_N_S_soc_S_counter_40390480
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390480_PATH "/soc/counter@40390480"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390480_FULL_NAME "counter@40390480"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390480_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390480_CHILD_IDX 40

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390480_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390480_ORD 59
#define DT_N_S_soc_S_counter_40390480_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390480_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390480_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390480_EXISTS 1
#define DT_N_INST_22_infineon_cat1_counter DT_N_S_soc_S_counter_40390480
#define DT_N_NODELABEL_counter1_14         DT_N_S_soc_S_counter_40390480

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390480_REG_NUM 1
#define DT_N_S_soc_S_counter_40390480_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_REG_IDX_0_VAL_ADDRESS 1077478528 /* 0x40390480 */
#define DT_N_S_soc_S_counter_40390480_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390480_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390480_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390480_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_VAL_irq 145
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390480_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390480_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390480_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390480_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390480_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390480_P_resolution 16
#define DT_N_S_soc_S_counter_40390480_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_status "disabled"
#define DT_N_S_soc_S_counter_40390480_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390480_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390480_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390480_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390480_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390480_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390480_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390480_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390480, status, 0)
#define DT_N_S_soc_S_counter_40390480_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390480, status, 0)
#define DT_N_S_soc_S_counter_40390480_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390480, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390480_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390480, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390480_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390480_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390480_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390480_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390480_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390480_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390480_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390480, compatible, 0)
#define DT_N_S_soc_S_counter_40390480_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390480, compatible, 0)
#define DT_N_S_soc_S_counter_40390480_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390480_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390480_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390480_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_reg {1077478528 /* 0x40390480 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390480_P_reg_IDX_0 1077478528
#define DT_N_S_soc_S_counter_40390480_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390480_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_interrupts {145 /* 0x91 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390480_P_interrupts_IDX_0 145
#define DT_N_S_soc_S_counter_40390480_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390480_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390480_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390480_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390480_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403904c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403904c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403904c0_PATH "/soc/counter@403904c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403904c0_FULL_NAME "counter@403904c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403904c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403904c0_CHILD_IDX 41

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403904c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403904c0_ORD 60
#define DT_N_S_soc_S_counter_403904c0_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403904c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403904c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403904c0_EXISTS 1
#define DT_N_INST_23_infineon_cat1_counter DT_N_S_soc_S_counter_403904c0
#define DT_N_NODELABEL_counter1_15         DT_N_S_soc_S_counter_403904c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403904c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403904c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_REG_IDX_0_VAL_ADDRESS 1077478592 /* 0x403904c0 */
#define DT_N_S_soc_S_counter_403904c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403904c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403904c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403904c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_VAL_irq 146
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403904c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403904c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403904c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403904c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403904c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403904c0_P_resolution 16
#define DT_N_S_soc_S_counter_403904c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403904c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403904c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403904c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403904c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403904c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403904c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403904c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403904c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403904c0, status, 0)
#define DT_N_S_soc_S_counter_403904c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403904c0, status, 0)
#define DT_N_S_soc_S_counter_403904c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403904c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403904c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403904c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403904c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403904c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403904c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403904c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403904c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403904c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403904c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403904c0, compatible, 0)
#define DT_N_S_soc_S_counter_403904c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403904c0, compatible, 0)
#define DT_N_S_soc_S_counter_403904c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403904c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403904c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403904c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403904c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403904c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_reg {1077478592 /* 0x403904c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403904c0_P_reg_IDX_0 1077478592
#define DT_N_S_soc_S_counter_403904c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403904c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_interrupts {146 /* 0x92 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403904c0_P_interrupts_IDX_0 146
#define DT_N_S_soc_S_counter_403904c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403904c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403904c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403904c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403904c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390500
 *
 * Node identifier: DT_N_S_soc_S_counter_40390500
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390500_PATH "/soc/counter@40390500"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390500_FULL_NAME "counter@40390500"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390500_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390500_CHILD_IDX 42

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390500_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390500_ORD 61
#define DT_N_S_soc_S_counter_40390500_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390500_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390500_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390500_EXISTS 1
#define DT_N_INST_24_infineon_cat1_counter DT_N_S_soc_S_counter_40390500
#define DT_N_NODELABEL_counter1_16         DT_N_S_soc_S_counter_40390500

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390500_REG_NUM 1
#define DT_N_S_soc_S_counter_40390500_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_REG_IDX_0_VAL_ADDRESS 1077478656 /* 0x40390500 */
#define DT_N_S_soc_S_counter_40390500_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390500_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390500_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390500_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_VAL_irq 147
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390500_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390500_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390500_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390500_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390500_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390500_P_resolution 16
#define DT_N_S_soc_S_counter_40390500_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_status "disabled"
#define DT_N_S_soc_S_counter_40390500_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390500_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390500_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390500_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390500_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390500_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390500_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390500_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390500, status, 0)
#define DT_N_S_soc_S_counter_40390500_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390500, status, 0)
#define DT_N_S_soc_S_counter_40390500_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390500_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390500_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390500_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390500_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390500_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390500_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390500_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390500_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390500, compatible, 0)
#define DT_N_S_soc_S_counter_40390500_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390500, compatible, 0)
#define DT_N_S_soc_S_counter_40390500_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390500_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390500_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390500_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_reg {1077478656 /* 0x40390500 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390500_P_reg_IDX_0 1077478656
#define DT_N_S_soc_S_counter_40390500_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390500_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_interrupts {147 /* 0x93 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390500_P_interrupts_IDX_0 147
#define DT_N_S_soc_S_counter_40390500_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390500_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390500_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390500_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390500_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390540
 *
 * Node identifier: DT_N_S_soc_S_counter_40390540
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390540_PATH "/soc/counter@40390540"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390540_FULL_NAME "counter@40390540"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390540_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390540_CHILD_IDX 43

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390540_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390540_ORD 62
#define DT_N_S_soc_S_counter_40390540_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390540_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390540_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390540_EXISTS 1
#define DT_N_INST_25_infineon_cat1_counter DT_N_S_soc_S_counter_40390540
#define DT_N_NODELABEL_counter1_17         DT_N_S_soc_S_counter_40390540

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390540_REG_NUM 1
#define DT_N_S_soc_S_counter_40390540_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_REG_IDX_0_VAL_ADDRESS 1077478720 /* 0x40390540 */
#define DT_N_S_soc_S_counter_40390540_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390540_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390540_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390540_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_VAL_irq 148
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390540_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390540_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390540_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390540_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390540_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390540_P_resolution 16
#define DT_N_S_soc_S_counter_40390540_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_status "disabled"
#define DT_N_S_soc_S_counter_40390540_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390540_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390540_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390540_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390540_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390540_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390540_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390540_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390540, status, 0)
#define DT_N_S_soc_S_counter_40390540_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390540, status, 0)
#define DT_N_S_soc_S_counter_40390540_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390540, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390540_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390540, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390540_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390540_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390540_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390540_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390540_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390540_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390540_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390540, compatible, 0)
#define DT_N_S_soc_S_counter_40390540_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390540, compatible, 0)
#define DT_N_S_soc_S_counter_40390540_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390540, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390540_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390540, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390540_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390540_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_reg {1077478720 /* 0x40390540 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390540_P_reg_IDX_0 1077478720
#define DT_N_S_soc_S_counter_40390540_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390540_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_interrupts {148 /* 0x94 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390540_P_interrupts_IDX_0 148
#define DT_N_S_soc_S_counter_40390540_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390540_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390540_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390540_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390540_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390580
 *
 * Node identifier: DT_N_S_soc_S_counter_40390580
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390580_PATH "/soc/counter@40390580"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390580_FULL_NAME "counter@40390580"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390580_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390580_CHILD_IDX 44

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390580_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390580_ORD 63
#define DT_N_S_soc_S_counter_40390580_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390580_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390580_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390580_EXISTS 1
#define DT_N_INST_26_infineon_cat1_counter DT_N_S_soc_S_counter_40390580
#define DT_N_NODELABEL_counter1_18         DT_N_S_soc_S_counter_40390580

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390580_REG_NUM 1
#define DT_N_S_soc_S_counter_40390580_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_REG_IDX_0_VAL_ADDRESS 1077478784 /* 0x40390580 */
#define DT_N_S_soc_S_counter_40390580_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390580_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390580_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390580_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_VAL_irq 149
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390580_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390580_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390580_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390580_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390580_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390580_P_resolution 16
#define DT_N_S_soc_S_counter_40390580_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_status "disabled"
#define DT_N_S_soc_S_counter_40390580_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390580_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390580_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390580_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390580_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390580_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390580_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390580_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390580, status, 0)
#define DT_N_S_soc_S_counter_40390580_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390580, status, 0)
#define DT_N_S_soc_S_counter_40390580_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390580, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390580_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390580, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390580_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390580_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390580_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390580_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390580_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390580_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390580_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390580, compatible, 0)
#define DT_N_S_soc_S_counter_40390580_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390580, compatible, 0)
#define DT_N_S_soc_S_counter_40390580_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390580, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390580_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390580, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390580_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390580_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_reg {1077478784 /* 0x40390580 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390580_P_reg_IDX_0 1077478784
#define DT_N_S_soc_S_counter_40390580_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390580_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_interrupts {149 /* 0x95 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390580_P_interrupts_IDX_0 149
#define DT_N_S_soc_S_counter_40390580_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390580_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390580_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390580_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390580_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403905c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403905c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403905c0_PATH "/soc/counter@403905c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403905c0_FULL_NAME "counter@403905c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403905c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403905c0_CHILD_IDX 45

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403905c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403905c0_ORD 64
#define DT_N_S_soc_S_counter_403905c0_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403905c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403905c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403905c0_EXISTS 1
#define DT_N_INST_27_infineon_cat1_counter DT_N_S_soc_S_counter_403905c0
#define DT_N_NODELABEL_counter1_19         DT_N_S_soc_S_counter_403905c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403905c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403905c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_REG_IDX_0_VAL_ADDRESS 1077478848 /* 0x403905c0 */
#define DT_N_S_soc_S_counter_403905c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403905c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403905c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403905c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_VAL_irq 150
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403905c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403905c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403905c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403905c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403905c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403905c0_P_resolution 16
#define DT_N_S_soc_S_counter_403905c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403905c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403905c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403905c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403905c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403905c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403905c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403905c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403905c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403905c0, status, 0)
#define DT_N_S_soc_S_counter_403905c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403905c0, status, 0)
#define DT_N_S_soc_S_counter_403905c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403905c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403905c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403905c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403905c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403905c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403905c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403905c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403905c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403905c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403905c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403905c0, compatible, 0)
#define DT_N_S_soc_S_counter_403905c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403905c0, compatible, 0)
#define DT_N_S_soc_S_counter_403905c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403905c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403905c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403905c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403905c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403905c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_reg {1077478848 /* 0x403905c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403905c0_P_reg_IDX_0 1077478848
#define DT_N_S_soc_S_counter_403905c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403905c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_interrupts {150 /* 0x96 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403905c0_P_interrupts_IDX_0 150
#define DT_N_S_soc_S_counter_403905c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403905c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403905c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403905c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403905c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390600
 *
 * Node identifier: DT_N_S_soc_S_counter_40390600
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390600_PATH "/soc/counter@40390600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390600_FULL_NAME "counter@40390600"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390600_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390600_CHILD_IDX 46

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390600_ORD 65
#define DT_N_S_soc_S_counter_40390600_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390600_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390600_EXISTS 1
#define DT_N_INST_28_infineon_cat1_counter DT_N_S_soc_S_counter_40390600
#define DT_N_NODELABEL_counter1_20         DT_N_S_soc_S_counter_40390600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390600_REG_NUM 1
#define DT_N_S_soc_S_counter_40390600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_REG_IDX_0_VAL_ADDRESS 1077478912 /* 0x40390600 */
#define DT_N_S_soc_S_counter_40390600_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390600_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390600_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_VAL_irq 151
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390600_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390600_P_resolution 16
#define DT_N_S_soc_S_counter_40390600_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_status "disabled"
#define DT_N_S_soc_S_counter_40390600_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390600_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390600_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390600_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390600_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390600_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390600, status, 0)
#define DT_N_S_soc_S_counter_40390600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390600, status, 0)
#define DT_N_S_soc_S_counter_40390600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390600_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390600_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390600_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390600_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390600_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390600_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390600, compatible, 0)
#define DT_N_S_soc_S_counter_40390600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390600, compatible, 0)
#define DT_N_S_soc_S_counter_40390600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390600_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_reg {1077478912 /* 0x40390600 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390600_P_reg_IDX_0 1077478912
#define DT_N_S_soc_S_counter_40390600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_interrupts {151 /* 0x97 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390600_P_interrupts_IDX_0 151
#define DT_N_S_soc_S_counter_40390600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390640
 *
 * Node identifier: DT_N_S_soc_S_counter_40390640
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390640_PATH "/soc/counter@40390640"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390640_FULL_NAME "counter@40390640"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390640_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390640_CHILD_IDX 47

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390640_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390640_ORD 66
#define DT_N_S_soc_S_counter_40390640_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390640_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390640_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390640_EXISTS 1
#define DT_N_INST_29_infineon_cat1_counter DT_N_S_soc_S_counter_40390640
#define DT_N_NODELABEL_counter1_21         DT_N_S_soc_S_counter_40390640

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390640_REG_NUM 1
#define DT_N_S_soc_S_counter_40390640_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_REG_IDX_0_VAL_ADDRESS 1077478976 /* 0x40390640 */
#define DT_N_S_soc_S_counter_40390640_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390640_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390640_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390640_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_VAL_irq 152
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390640_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390640_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390640_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390640_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390640_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390640_P_resolution 16
#define DT_N_S_soc_S_counter_40390640_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_status "disabled"
#define DT_N_S_soc_S_counter_40390640_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390640_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390640_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390640_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390640_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390640_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390640_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390640_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390640, status, 0)
#define DT_N_S_soc_S_counter_40390640_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390640, status, 0)
#define DT_N_S_soc_S_counter_40390640_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390640, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390640_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390640, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390640_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390640_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390640_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390640_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390640_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390640_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390640_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390640, compatible, 0)
#define DT_N_S_soc_S_counter_40390640_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390640, compatible, 0)
#define DT_N_S_soc_S_counter_40390640_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390640, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390640_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390640, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390640_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390640_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_reg {1077478976 /* 0x40390640 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390640_P_reg_IDX_0 1077478976
#define DT_N_S_soc_S_counter_40390640_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390640_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_interrupts {152 /* 0x98 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390640_P_interrupts_IDX_0 152
#define DT_N_S_soc_S_counter_40390640_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390640_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390640_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390640_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390640_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@40390680
 *
 * Node identifier: DT_N_S_soc_S_counter_40390680
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_40390680_PATH "/soc/counter@40390680"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_40390680_FULL_NAME "counter@40390680"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_40390680_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_40390680_CHILD_IDX 48

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_40390680_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_40390680_ORD 67
#define DT_N_S_soc_S_counter_40390680_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_40390680_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_40390680_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_40390680_EXISTS 1
#define DT_N_INST_30_infineon_cat1_counter DT_N_S_soc_S_counter_40390680
#define DT_N_NODELABEL_counter1_22         DT_N_S_soc_S_counter_40390680

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_40390680_REG_NUM 1
#define DT_N_S_soc_S_counter_40390680_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_REG_IDX_0_VAL_ADDRESS 1077479040 /* 0x40390680 */
#define DT_N_S_soc_S_counter_40390680_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_40390680_RANGES_NUM 0
#define DT_N_S_soc_S_counter_40390680_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_40390680_IRQ_NUM 1
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_VAL_irq 153
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_40390680_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_40390680_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_40390680_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_40390680_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_40390680_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_40390680_P_resolution 16
#define DT_N_S_soc_S_counter_40390680_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_status "disabled"
#define DT_N_S_soc_S_counter_40390680_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_40390680_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_40390680_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390680_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_40390680_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_40390680_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_40390680_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_40390680_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390680, status, 0)
#define DT_N_S_soc_S_counter_40390680_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390680, status, 0)
#define DT_N_S_soc_S_counter_40390680_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390680, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390680_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390680, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390680_P_status_LEN 1
#define DT_N_S_soc_S_counter_40390680_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_40390680_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_40390680_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_40390680_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_40390680_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_40390680_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_40390680, compatible, 0)
#define DT_N_S_soc_S_counter_40390680_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_40390680, compatible, 0)
#define DT_N_S_soc_S_counter_40390680_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_40390680, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390680_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_40390680, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_40390680_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_40390680_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_reg {1077479040 /* 0x40390680 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_40390680_P_reg_IDX_0 1077479040
#define DT_N_S_soc_S_counter_40390680_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_40390680_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_interrupts {153 /* 0x99 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_40390680_P_interrupts_IDX_0 153
#define DT_N_S_soc_S_counter_40390680_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_40390680_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_wakeup_source 0
#define DT_N_S_soc_S_counter_40390680_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_40390680_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_40390680_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/counter@403906c0
 *
 * Node identifier: DT_N_S_soc_S_counter_403906c0
 *
 * Binding (compatible = infineon,cat1-counter):
 *   $ZEPHYR_BASE\dts\bindings\counter\infineon,cat1-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_403906c0_PATH "/soc/counter@403906c0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_403906c0_FULL_NAME "counter@403906c0"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_403906c0_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_403906c0_CHILD_IDX 49

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_403906c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_403906c0_ORD 68
#define DT_N_S_soc_S_counter_403906c0_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_403906c0_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_403906c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_403906c0_EXISTS 1
#define DT_N_INST_31_infineon_cat1_counter DT_N_S_soc_S_counter_403906c0
#define DT_N_NODELABEL_counter1_23         DT_N_S_soc_S_counter_403906c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_403906c0_REG_NUM 1
#define DT_N_S_soc_S_counter_403906c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_REG_IDX_0_VAL_ADDRESS 1077479104 /* 0x403906c0 */
#define DT_N_S_soc_S_counter_403906c0_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_counter_403906c0_RANGES_NUM 0
#define DT_N_S_soc_S_counter_403906c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_403906c0_IRQ_NUM 1
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_VAL_irq 154
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_counter_403906c0_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_COMPAT_MATCHES_infineon_cat1_counter 1
#define DT_N_S_soc_S_counter_403906c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_counter_403906c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_COMPAT_MODEL_IDX_0 "cat1-counter"
#define DT_N_S_soc_S_counter_403906c0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_403906c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_403906c0_P_resolution 16
#define DT_N_S_soc_S_counter_403906c0_P_resolution_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_status "disabled"
#define DT_N_S_soc_S_counter_403906c0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_403906c0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_403906c0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403906c0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_403906c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_counter_403906c0_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_403906c0_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_403906c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403906c0, status, 0)
#define DT_N_S_soc_S_counter_403906c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403906c0, status, 0)
#define DT_N_S_soc_S_counter_403906c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403906c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403906c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403906c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403906c0_P_status_LEN 1
#define DT_N_S_soc_S_counter_403906c0_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_compatible {"infineon,cat1-counter"}
#define DT_N_S_soc_S_counter_403906c0_P_compatible_IDX_0 "infineon,cat1-counter"
#define DT_N_S_soc_S_counter_403906c0_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-counter
#define DT_N_S_soc_S_counter_403906c0_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_counter
#define DT_N_S_soc_S_counter_403906c0_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_COUNTER
#define DT_N_S_soc_S_counter_403906c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_403906c0, compatible, 0)
#define DT_N_S_soc_S_counter_403906c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_403906c0, compatible, 0)
#define DT_N_S_soc_S_counter_403906c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_403906c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403906c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_403906c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_403906c0_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_403906c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_reg {1077479104 /* 0x403906c0 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_counter_403906c0_P_reg_IDX_0 1077479104
#define DT_N_S_soc_S_counter_403906c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_reg_IDX_1 64
#define DT_N_S_soc_S_counter_403906c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_interrupts {154 /* 0x9a */, 6 /* 0x6 */}
#define DT_N_S_soc_S_counter_403906c0_P_interrupts_IDX_0 154
#define DT_N_S_soc_S_counter_403906c0_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_counter_403906c0_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_wakeup_source 0
#define DT_N_S_soc_S_counter_403906c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_403906c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_403906c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40600000
 *
 * Node identifier: DT_N_S_soc_S_scb_40600000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40600000_PATH "/soc/scb@40600000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40600000_FULL_NAME "scb@40600000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40600000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40600000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40600000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40600000_ORD 69
#define DT_N_S_soc_S_scb_40600000_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40600000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40600000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40600000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_scb DT_N_S_soc_S_scb_40600000
#define DT_N_NODELABEL_scb0           DT_N_S_soc_S_scb_40600000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40600000_REG_NUM 1
#define DT_N_S_soc_S_scb_40600000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_REG_IDX_0_VAL_ADDRESS 1080033280 /* 0x40600000 */
#define DT_N_S_soc_S_scb_40600000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40600000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40600000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40600000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40600000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40600000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40600000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40600000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40600000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40600000_P_reg {1080033280 /* 0x40600000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40600000_P_reg_IDX_0 1080033280
#define DT_N_S_soc_S_scb_40600000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40600000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_interrupts {39 /* 0x27 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40600000_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_scb_40600000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40600000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_status "disabled"
#define DT_N_S_soc_S_scb_40600000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40600000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40600000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40600000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40600000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40600000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40600000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40600000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40600000, status, 0)
#define DT_N_S_soc_S_scb_40600000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40600000, status, 0)
#define DT_N_S_soc_S_scb_40600000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40600000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40600000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40600000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40600000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40600000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40600000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40600000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40600000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40600000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40600000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40600000, compatible, 0)
#define DT_N_S_soc_S_scb_40600000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40600000, compatible, 0)
#define DT_N_S_soc_S_scb_40600000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40600000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40600000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40600000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40600000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40600000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40600000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40600000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40600000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40610000
 *
 * Node identifier: DT_N_S_soc_S_scb_40610000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40610000_PATH "/soc/scb@40610000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40610000_FULL_NAME "scb@40610000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40610000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40610000_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40610000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40610000_ORD 70
#define DT_N_S_soc_S_scb_40610000_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40610000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40610000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40610000_EXISTS 1
#define DT_N_INST_1_infineon_cat1_scb DT_N_S_soc_S_scb_40610000
#define DT_N_NODELABEL_scb1           DT_N_S_soc_S_scb_40610000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40610000_REG_NUM 1
#define DT_N_S_soc_S_scb_40610000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_REG_IDX_0_VAL_ADDRESS 1080098816 /* 0x40610000 */
#define DT_N_S_soc_S_scb_40610000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40610000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40610000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40610000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40610000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40610000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40610000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40610000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40610000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40610000_P_reg {1080098816 /* 0x40610000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40610000_P_reg_IDX_0 1080098816
#define DT_N_S_soc_S_scb_40610000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40610000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_interrupts {40 /* 0x28 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40610000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_scb_40610000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40610000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_status "disabled"
#define DT_N_S_soc_S_scb_40610000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40610000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40610000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40610000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40610000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40610000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40610000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40610000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40610000, status, 0)
#define DT_N_S_soc_S_scb_40610000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40610000, status, 0)
#define DT_N_S_soc_S_scb_40610000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40610000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40610000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40610000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40610000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40610000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40610000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40610000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40610000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40610000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40610000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40610000, compatible, 0)
#define DT_N_S_soc_S_scb_40610000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40610000, compatible, 0)
#define DT_N_S_soc_S_scb_40610000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40610000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40610000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40610000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40610000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40610000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40610000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40610000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40610000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p6_0_scb3_i2c_scl
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_PATH "/soc/pinctrl@40300000/p6_0_scb3_i2c_scl"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FULL_NAME "p6_0_scb3_i2c_scl"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_ORD 71
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_SUPPORTS_ORDS \
	73, /* /soc/scb@40630000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_EXISTS 1
#define DT_N_NODELABEL_p6_0_scb3_i2c_scl DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_pinmux 1245190
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_push_pull 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p6_1_scb3_i2c_sda
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_PATH "/soc/pinctrl@40300000/p6_1_scb3_i2c_sda"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FULL_NAME "p6_1_scb3_i2c_sda"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_ORD 72
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_SUPPORTS_ORDS \
	73, /* /soc/scb@40630000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_EXISTS 1
#define DT_N_NODELABEL_p6_1_scb3_i2c_sda DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_pinmux 1245446
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_push_pull 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/scb@40630000
 *
 * Node identifier: DT_N_S_soc_S_scb_40630000
 *
 * Binding (compatible = infineon,cat1-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\infineon,cat1-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40630000_PATH "/soc/scb@40630000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40630000_FULL_NAME "scb@40630000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40630000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40630000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40630000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40630000_ORD 73
#define DT_N_S_soc_S_scb_40630000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40630000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */ \
	71, /* /soc/pinctrl@40300000/p6_0_scb3_i2c_scl */ \
	72, /* /soc/pinctrl@40300000/p6_1_scb3_i2c_sda */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40630000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40630000_EXISTS 1
#define DT_N_ALIAS_i2c_0              DT_N_S_soc_S_scb_40630000
#define DT_N_INST_0_infineon_cat1_i2c DT_N_S_soc_S_scb_40630000
#define DT_N_NODELABEL_scb3           DT_N_S_soc_S_scb_40630000
#define DT_N_NODELABEL_i2c3           DT_N_S_soc_S_scb_40630000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40630000_REG_NUM 1
#define DT_N_S_soc_S_scb_40630000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_REG_IDX_0_VAL_ADDRESS 1080229888 /* 0x40630000 */
#define DT_N_S_soc_S_scb_40630000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40630000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40630000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40630000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40630000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_COMPAT_MATCHES_infineon_cat1_i2c 1
#define DT_N_S_soc_S_scb_40630000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40630000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_COMPAT_MODEL_IDX_0 "cat1-i2c"
#define DT_N_S_soc_S_scb_40630000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40630000_PINCTRL_NUM 1
#define DT_N_S_soc_S_scb_40630000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_scb_40630000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40630000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_scb_40630000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl
#define DT_N_S_soc_S_scb_40630000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40630000_P_reg {1080229888 /* 0x40630000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40630000_P_reg_IDX_0 1080229888
#define DT_N_S_soc_S_scb_40630000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40630000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_interrupts {42 /* 0x2a */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40630000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_scb_40630000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40630000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 1)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 1)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40630000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40630000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40630000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40630000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40630000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_scb_40630000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_status "disabled"
#define DT_N_S_soc_S_scb_40630000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40630000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40630000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40630000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40630000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40630000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40630000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40630000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40630000, status, 0)
#define DT_N_S_soc_S_scb_40630000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40630000, status, 0)
#define DT_N_S_soc_S_scb_40630000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40630000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40630000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40630000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_compatible {"infineon,cat1-i2c"}
#define DT_N_S_soc_S_scb_40630000_P_compatible_IDX_0 "infineon,cat1-i2c"
#define DT_N_S_soc_S_scb_40630000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-i2c
#define DT_N_S_soc_S_scb_40630000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_i2c
#define DT_N_S_soc_S_scb_40630000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_I2C
#define DT_N_S_soc_S_scb_40630000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40630000, compatible, 0)
#define DT_N_S_soc_S_scb_40630000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40630000, compatible, 0)
#define DT_N_S_soc_S_scb_40630000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40630000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40630000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40630000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40630000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40630000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40630000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40630000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40640000
 *
 * Node identifier: DT_N_S_soc_S_scb_40640000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40640000_PATH "/soc/scb@40640000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40640000_FULL_NAME "scb@40640000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40640000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40640000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40640000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40640000_ORD 74
#define DT_N_S_soc_S_scb_40640000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40640000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40640000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40640000_EXISTS 1
#define DT_N_INST_2_infineon_cat1_scb DT_N_S_soc_S_scb_40640000
#define DT_N_NODELABEL_scb4           DT_N_S_soc_S_scb_40640000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40640000_REG_NUM 1
#define DT_N_S_soc_S_scb_40640000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_REG_IDX_0_VAL_ADDRESS 1080295424 /* 0x40640000 */
#define DT_N_S_soc_S_scb_40640000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40640000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40640000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40640000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40640000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40640000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40640000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40640000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40640000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40640000_P_reg {1080295424 /* 0x40640000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40640000_P_reg_IDX_0 1080295424
#define DT_N_S_soc_S_scb_40640000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40640000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_interrupts {43 /* 0x2b */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40640000_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_scb_40640000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40640000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_status "disabled"
#define DT_N_S_soc_S_scb_40640000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40640000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40640000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40640000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40640000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40640000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40640000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40640000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40640000, status, 0)
#define DT_N_S_soc_S_scb_40640000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40640000, status, 0)
#define DT_N_S_soc_S_scb_40640000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40640000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40640000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40640000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40640000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40640000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40640000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40640000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40640000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40640000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40640000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40640000, compatible, 0)
#define DT_N_S_soc_S_scb_40640000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40640000, compatible, 0)
#define DT_N_S_soc_S_scb_40640000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40640000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40640000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40640000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40640000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40640000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40640000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40640000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40640000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p5_0_scb5_uart_rx
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_PATH "/soc/pinctrl@40300000/p5_0_scb5_uart_rx"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FULL_NAME "p5_0_scb5_uart_rx"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_ORD 75
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_SUPPORTS_ORDS \
	77, /* /soc/scb@40650000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_EXISTS 1
#define DT_N_NODELABEL_p5_0_scb5_uart_rx DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_pinmux 1179653
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_push_pull 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p5_1_scb5_uart_tx
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_PATH "/soc/pinctrl@40300000/p5_1_scb5_uart_tx"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FULL_NAME "p5_1_scb5_uart_tx"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_CHILD_IDX 23

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_ORD 76
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_SUPPORTS_ORDS \
	77, /* /soc/scb@40650000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_EXISTS 1
#define DT_N_NODELABEL_p5_1_scb5_uart_tx DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_pinmux 1179909
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_push_pull 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/scb@40650000
 *
 * Node identifier: DT_N_S_soc_S_scb_40650000
 *
 * Binding (compatible = infineon,cat1-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\infineon,cat1-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40650000_PATH "/soc/scb@40650000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40650000_FULL_NAME "scb@40650000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40650000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40650000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40650000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40650000_ORD 77
#define DT_N_S_soc_S_scb_40650000_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40650000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */ \
	75, /* /soc/pinctrl@40300000/p5_0_scb5_uart_rx */ \
	76, /* /soc/pinctrl@40300000/p5_1_scb5_uart_tx */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40650000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40650000_EXISTS 1
#define DT_N_ALIAS_uart_5              DT_N_S_soc_S_scb_40650000
#define DT_N_INST_1_infineon_cat1_uart DT_N_S_soc_S_scb_40650000
#define DT_N_NODELABEL_scb5            DT_N_S_soc_S_scb_40650000
#define DT_N_NODELABEL_uart5           DT_N_S_soc_S_scb_40650000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40650000_REG_NUM 1
#define DT_N_S_soc_S_scb_40650000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_REG_IDX_0_VAL_ADDRESS 1080360960 /* 0x40650000 */
#define DT_N_S_soc_S_scb_40650000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40650000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40650000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40650000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40650000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_COMPAT_MATCHES_infineon_cat1_uart 1
#define DT_N_S_soc_S_scb_40650000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40650000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_COMPAT_MODEL_IDX_0 "cat1-uart"
#define DT_N_S_soc_S_scb_40650000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40650000_PINCTRL_NUM 1
#define DT_N_S_soc_S_scb_40650000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_scb_40650000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40650000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_scb_40650000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx
#define DT_N_S_soc_S_scb_40650000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40650000_P_reg {1080360960 /* 0x40650000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40650000_P_reg_IDX_0 1080360960
#define DT_N_S_soc_S_scb_40650000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40650000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_interrupts {44 /* 0x2c */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40650000_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_scb_40650000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40650000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 1)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 1)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40650000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40650000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40650000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40650000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40650000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_scb_40650000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_current_speed 115200
#define DT_N_S_soc_S_scb_40650000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_hw_flow_control 0
#define DT_N_S_soc_S_scb_40650000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_status "okay"
#define DT_N_S_soc_S_scb_40650000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_scb_40650000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_scb_40650000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40650000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_scb_40650000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_scb_40650000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_scb_40650000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40650000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40650000, status, 0)
#define DT_N_S_soc_S_scb_40650000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40650000, status, 0)
#define DT_N_S_soc_S_scb_40650000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40650000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40650000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40650000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_compatible {"infineon,cat1-uart"}
#define DT_N_S_soc_S_scb_40650000_P_compatible_IDX_0 "infineon,cat1-uart"
#define DT_N_S_soc_S_scb_40650000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-uart
#define DT_N_S_soc_S_scb_40650000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_uart
#define DT_N_S_soc_S_scb_40650000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_UART
#define DT_N_S_soc_S_scb_40650000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40650000, compatible, 0)
#define DT_N_S_soc_S_scb_40650000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40650000, compatible, 0)
#define DT_N_S_soc_S_scb_40650000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40650000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40650000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40650000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40650000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40650000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40650000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40650000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40660000
 *
 * Node identifier: DT_N_S_soc_S_scb_40660000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40660000_PATH "/soc/scb@40660000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40660000_FULL_NAME "scb@40660000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40660000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40660000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40660000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40660000_ORD 78
#define DT_N_S_soc_S_scb_40660000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40660000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40660000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40660000_EXISTS 1
#define DT_N_INST_3_infineon_cat1_scb DT_N_S_soc_S_scb_40660000
#define DT_N_NODELABEL_scb6           DT_N_S_soc_S_scb_40660000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40660000_REG_NUM 1
#define DT_N_S_soc_S_scb_40660000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_REG_IDX_0_VAL_ADDRESS 1080426496 /* 0x40660000 */
#define DT_N_S_soc_S_scb_40660000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40660000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40660000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40660000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40660000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40660000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40660000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40660000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40660000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40660000_P_reg {1080426496 /* 0x40660000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40660000_P_reg_IDX_0 1080426496
#define DT_N_S_soc_S_scb_40660000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40660000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_interrupts {45 /* 0x2d */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40660000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_scb_40660000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40660000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_status "disabled"
#define DT_N_S_soc_S_scb_40660000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40660000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40660000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40660000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40660000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40660000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40660000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40660000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40660000, status, 0)
#define DT_N_S_soc_S_scb_40660000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40660000, status, 0)
#define DT_N_S_soc_S_scb_40660000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40660000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40660000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40660000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40660000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40660000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40660000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40660000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40660000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40660000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40660000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40660000, compatible, 0)
#define DT_N_S_soc_S_scb_40660000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40660000, compatible, 0)
#define DT_N_S_soc_S_scb_40660000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40660000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40660000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40660000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40660000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40660000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40660000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40660000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40660000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40670000
 *
 * Node identifier: DT_N_S_soc_S_scb_40670000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40670000_PATH "/soc/scb@40670000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40670000_FULL_NAME "scb@40670000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40670000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40670000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40670000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40670000_ORD 79
#define DT_N_S_soc_S_scb_40670000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40670000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40670000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40670000_EXISTS 1
#define DT_N_INST_4_infineon_cat1_scb DT_N_S_soc_S_scb_40670000
#define DT_N_NODELABEL_scb7           DT_N_S_soc_S_scb_40670000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40670000_REG_NUM 1
#define DT_N_S_soc_S_scb_40670000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_REG_IDX_0_VAL_ADDRESS 1080492032 /* 0x40670000 */
#define DT_N_S_soc_S_scb_40670000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40670000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40670000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40670000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_VAL_irq 46
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40670000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40670000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40670000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40670000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40670000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40670000_P_reg {1080492032 /* 0x40670000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40670000_P_reg_IDX_0 1080492032
#define DT_N_S_soc_S_scb_40670000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40670000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_interrupts {46 /* 0x2e */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40670000_P_interrupts_IDX_0 46
#define DT_N_S_soc_S_scb_40670000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40670000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_status "disabled"
#define DT_N_S_soc_S_scb_40670000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40670000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40670000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40670000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40670000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40670000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40670000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40670000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40670000, status, 0)
#define DT_N_S_soc_S_scb_40670000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40670000, status, 0)
#define DT_N_S_soc_S_scb_40670000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40670000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40670000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40670000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40670000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40670000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40670000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40670000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40670000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40670000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40670000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40670000, compatible, 0)
#define DT_N_S_soc_S_scb_40670000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40670000, compatible, 0)
#define DT_N_S_soc_S_scb_40670000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40670000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40670000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40670000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40670000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40670000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40670000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40670000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40670000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40680000
 *
 * Node identifier: DT_N_S_soc_S_scb_40680000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40680000_PATH "/soc/scb@40680000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40680000_FULL_NAME "scb@40680000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40680000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40680000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40680000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40680000_ORD 80
#define DT_N_S_soc_S_scb_40680000_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40680000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40680000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40680000_EXISTS 1
#define DT_N_INST_5_infineon_cat1_scb DT_N_S_soc_S_scb_40680000
#define DT_N_NODELABEL_scb8           DT_N_S_soc_S_scb_40680000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40680000_REG_NUM 1
#define DT_N_S_soc_S_scb_40680000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_REG_IDX_0_VAL_ADDRESS 1080557568 /* 0x40680000 */
#define DT_N_S_soc_S_scb_40680000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40680000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40680000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40680000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40680000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40680000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40680000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40680000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40680000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40680000_P_reg {1080557568 /* 0x40680000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40680000_P_reg_IDX_0 1080557568
#define DT_N_S_soc_S_scb_40680000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40680000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_interrupts {18 /* 0x12 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40680000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_scb_40680000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40680000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_status "disabled"
#define DT_N_S_soc_S_scb_40680000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40680000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40680000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40680000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40680000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40680000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40680000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40680000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40680000, status, 0)
#define DT_N_S_soc_S_scb_40680000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40680000, status, 0)
#define DT_N_S_soc_S_scb_40680000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40680000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40680000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40680000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40680000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40680000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40680000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40680000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40680000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40680000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40680000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40680000, compatible, 0)
#define DT_N_S_soc_S_scb_40680000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40680000, compatible, 0)
#define DT_N_S_soc_S_scb_40680000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40680000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40680000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40680000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40680000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40680000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40680000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40680000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40680000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40690000
 *
 * Node identifier: DT_N_S_soc_S_scb_40690000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40690000_PATH "/soc/scb@40690000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40690000_FULL_NAME "scb@40690000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40690000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40690000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40690000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40690000_ORD 81
#define DT_N_S_soc_S_scb_40690000_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40690000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40690000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40690000_EXISTS 1
#define DT_N_INST_6_infineon_cat1_scb DT_N_S_soc_S_scb_40690000
#define DT_N_NODELABEL_scb9           DT_N_S_soc_S_scb_40690000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40690000_REG_NUM 1
#define DT_N_S_soc_S_scb_40690000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_REG_IDX_0_VAL_ADDRESS 1080623104 /* 0x40690000 */
#define DT_N_S_soc_S_scb_40690000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40690000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40690000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40690000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40690000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_40690000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40690000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_40690000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40690000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40690000_P_reg {1080623104 /* 0x40690000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40690000_P_reg_IDX_0 1080623104
#define DT_N_S_soc_S_scb_40690000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40690000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_interrupts {47 /* 0x2f */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40690000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_scb_40690000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40690000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_status "disabled"
#define DT_N_S_soc_S_scb_40690000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_40690000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_40690000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40690000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_40690000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_40690000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_40690000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_40690000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40690000, status, 0)
#define DT_N_S_soc_S_scb_40690000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40690000, status, 0)
#define DT_N_S_soc_S_scb_40690000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40690000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40690000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40690000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40690000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40690000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_40690000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_40690000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_40690000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_40690000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_40690000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40690000, compatible, 0)
#define DT_N_S_soc_S_scb_40690000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40690000, compatible, 0)
#define DT_N_S_soc_S_scb_40690000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40690000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40690000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40690000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40690000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40690000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40690000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40690000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40690000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@406a0000
 *
 * Node identifier: DT_N_S_soc_S_scb_406a0000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_406a0000_PATH "/soc/scb@406a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_406a0000_FULL_NAME "scb@406a0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_406a0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_406a0000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_406a0000_ORD 82
#define DT_N_S_soc_S_scb_406a0000_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_406a0000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_406a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_406a0000_EXISTS 1
#define DT_N_INST_7_infineon_cat1_scb DT_N_S_soc_S_scb_406a0000
#define DT_N_NODELABEL_scb10          DT_N_S_soc_S_scb_406a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_406a0000_REG_NUM 1
#define DT_N_S_soc_S_scb_406a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_REG_IDX_0_VAL_ADDRESS 1080688640 /* 0x406a0000 */
#define DT_N_S_soc_S_scb_406a0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_406a0000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_406a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_406a0000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_VAL_irq 48
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_406a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_406a0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_406a0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_406a0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_406a0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_406a0000_P_reg {1080688640 /* 0x406a0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_406a0000_P_reg_IDX_0 1080688640
#define DT_N_S_soc_S_scb_406a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_406a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_interrupts {48 /* 0x30 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_406a0000_P_interrupts_IDX_0 48
#define DT_N_S_soc_S_scb_406a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_406a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_status "disabled"
#define DT_N_S_soc_S_scb_406a0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_406a0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_406a0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406a0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_406a0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_406a0000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_406a0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406a0000, status, 0)
#define DT_N_S_soc_S_scb_406a0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406a0000, status, 0)
#define DT_N_S_soc_S_scb_406a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406a0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406a0000_P_status_LEN 1
#define DT_N_S_soc_S_scb_406a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_406a0000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_406a0000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_406a0000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_406a0000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_406a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406a0000, compatible, 0)
#define DT_N_S_soc_S_scb_406a0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406a0000, compatible, 0)
#define DT_N_S_soc_S_scb_406a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406a0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_406a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_406a0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_406a0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_406a0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@406b0000
 *
 * Node identifier: DT_N_S_soc_S_scb_406b0000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_406b0000_PATH "/soc/scb@406b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_406b0000_FULL_NAME "scb@406b0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_406b0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_406b0000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406b0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_406b0000_ORD 83
#define DT_N_S_soc_S_scb_406b0000_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_406b0000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_406b0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_406b0000_EXISTS 1
#define DT_N_INST_8_infineon_cat1_scb DT_N_S_soc_S_scb_406b0000
#define DT_N_NODELABEL_scb11          DT_N_S_soc_S_scb_406b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_406b0000_REG_NUM 1
#define DT_N_S_soc_S_scb_406b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_REG_IDX_0_VAL_ADDRESS 1080754176 /* 0x406b0000 */
#define DT_N_S_soc_S_scb_406b0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_406b0000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_406b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_406b0000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_406b0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_406b0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_406b0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_406b0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_406b0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_406b0000_P_reg {1080754176 /* 0x406b0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_406b0000_P_reg_IDX_0 1080754176
#define DT_N_S_soc_S_scb_406b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_406b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_interrupts {49 /* 0x31 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_406b0000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_scb_406b0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_406b0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_status "disabled"
#define DT_N_S_soc_S_scb_406b0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_406b0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_406b0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406b0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_406b0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_406b0000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_406b0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406b0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406b0000, status, 0)
#define DT_N_S_soc_S_scb_406b0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406b0000, status, 0)
#define DT_N_S_soc_S_scb_406b0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406b0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406b0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406b0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406b0000_P_status_LEN 1
#define DT_N_S_soc_S_scb_406b0000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_406b0000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_406b0000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_406b0000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_406b0000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_406b0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406b0000, compatible, 0)
#define DT_N_S_soc_S_scb_406b0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406b0000, compatible, 0)
#define DT_N_S_soc_S_scb_406b0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406b0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406b0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406b0000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_406b0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_406b0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_406b0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_406b0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@406c0000
 *
 * Node identifier: DT_N_S_soc_S_scb_406c0000
 *
 * Binding (compatible = infineon,cat1-scb):
 *   $ZEPHYR_BASE\dts\bindings\arm\infineon,cat1-scb.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_406c0000_PATH "/soc/scb@406c0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_406c0000_FULL_NAME "scb@406c0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_406c0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_406c0000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_406c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_406c0000_ORD 84
#define DT_N_S_soc_S_scb_406c0000_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_406c0000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_406c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_406c0000_EXISTS 1
#define DT_N_INST_9_infineon_cat1_scb DT_N_S_soc_S_scb_406c0000
#define DT_N_NODELABEL_scb12          DT_N_S_soc_S_scb_406c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_406c0000_REG_NUM 1
#define DT_N_S_soc_S_scb_406c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_REG_IDX_0_VAL_ADDRESS 1080819712 /* 0x406c0000 */
#define DT_N_S_soc_S_scb_406c0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_406c0000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_406c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_406c0000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_406c0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_COMPAT_MATCHES_infineon_cat1_scb 1
#define DT_N_S_soc_S_scb_406c0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_406c0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_COMPAT_MODEL_IDX_0 "cat1-scb"
#define DT_N_S_soc_S_scb_406c0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_406c0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_406c0000_P_reg {1080819712 /* 0x406c0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_406c0000_P_reg_IDX_0 1080819712
#define DT_N_S_soc_S_scb_406c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_406c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_interrupts {50 /* 0x32 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_406c0000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_scb_406c0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_406c0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_status "disabled"
#define DT_N_S_soc_S_scb_406c0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_scb_406c0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_scb_406c0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406c0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_scb_406c0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_scb_406c0000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_scb_406c0000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_scb_406c0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406c0000, status, 0)
#define DT_N_S_soc_S_scb_406c0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406c0000, status, 0)
#define DT_N_S_soc_S_scb_406c0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406c0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406c0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406c0000_P_status_LEN 1
#define DT_N_S_soc_S_scb_406c0000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_compatible {"infineon,cat1-scb"}
#define DT_N_S_soc_S_scb_406c0000_P_compatible_IDX_0 "infineon,cat1-scb"
#define DT_N_S_soc_S_scb_406c0000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-scb
#define DT_N_S_soc_S_scb_406c0000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_scb
#define DT_N_S_soc_S_scb_406c0000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_SCB
#define DT_N_S_soc_S_scb_406c0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_406c0000, compatible, 0)
#define DT_N_S_soc_S_scb_406c0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_406c0000, compatible, 0)
#define DT_N_S_soc_S_scb_406c0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_406c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406c0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_406c0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_406c0000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_406c0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_406c0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_406c0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_406c0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv7m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv7m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 85
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	28, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv7m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv7m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV7M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40260180
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40260180
 *
 * Binding (compatible = infineon,cat1-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\infineon,cat1-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40260180_PATH "/soc/watchdog@40260180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40260180_FULL_NAME "watchdog@40260180"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40260180_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40260180_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40260180_ORD 86
#define DT_N_S_soc_S_watchdog_40260180_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40260180_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40260180_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40260180_EXISTS 1
#define DT_N_ALIAS_watchdog0               DT_N_S_soc_S_watchdog_40260180
#define DT_N_INST_0_infineon_cat1_watchdog DT_N_S_soc_S_watchdog_40260180
#define DT_N_NODELABEL_watchdog0           DT_N_S_soc_S_watchdog_40260180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40260180_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40260180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_REG_IDX_0_VAL_ADDRESS 1076232576 /* 0x40260180 */
#define DT_N_S_soc_S_watchdog_40260180_REG_IDX_0_VAL_SIZE 12 /* 0xc */
#define DT_N_S_soc_S_watchdog_40260180_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40260180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40260180_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_watchdog_40260180_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_COMPAT_MATCHES_infineon_cat1_watchdog 1
#define DT_N_S_soc_S_watchdog_40260180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_watchdog_40260180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_COMPAT_MODEL_IDX_0 "cat1-watchdog"
#define DT_N_S_soc_S_watchdog_40260180_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40260180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40260180_P_reg {1076232576 /* 0x40260180 */, 12 /* 0xc */}
#define DT_N_S_soc_S_watchdog_40260180_P_reg_IDX_0 1076232576
#define DT_N_S_soc_S_watchdog_40260180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_reg_IDX_1 12
#define DT_N_S_soc_S_watchdog_40260180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_status "okay"
#define DT_N_S_soc_S_watchdog_40260180_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40260180_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40260180_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40260180_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40260180_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40260180_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40260180_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40260180_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40260180, status, 0)
#define DT_N_S_soc_S_watchdog_40260180_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40260180, status, 0)
#define DT_N_S_soc_S_watchdog_40260180_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40260180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40260180_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40260180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40260180_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40260180_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_compatible {"infineon,cat1-watchdog"}
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_IDX_0 "infineon,cat1-watchdog"
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-watchdog
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_watchdog
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_WATCHDOG
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40260180, compatible, 0)
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40260180, compatible, 0)
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40260180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40260180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40260180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts {22 /* 0x16 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40260180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40260180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40260180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310080
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_PATH "/soc/pinctrl@40300000/gpio@40310080"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FULL_NAME "gpio@40310080"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_ORD 87
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_EXISTS 1
#define DT_N_INST_7_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080
#define DT_N_NODELABEL_gpio_prt1       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REG_IDX_0_VAL_ADDRESS 1076953216 /* 0x40310080 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_VAL_irq 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg {1076953216 /* 0x40310080 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg_IDX_0 1076953216
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts {1 /* 0x1 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts_IDX_0 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_ngpios 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310100
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_PATH "/soc/pinctrl@40300000/gpio@40310100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FULL_NAME "gpio@40310100"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_ORD 88
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_EXISTS 1
#define DT_N_INST_8_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100
#define DT_N_NODELABEL_gpio_prt2       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REG_IDX_0_VAL_ADDRESS 1076953344 /* 0x40310100 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_VAL_irq 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg {1076953344 /* 0x40310100 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg_IDX_0 1076953344
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts {2 /* 0x2 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts_IDX_0 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310200
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_PATH "/soc/pinctrl@40300000/gpio@40310200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FULL_NAME "gpio@40310200"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_ORD 89
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_EXISTS 1
#define DT_N_INST_9_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200
#define DT_N_NODELABEL_gpio_prt4       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REG_IDX_0_VAL_ADDRESS 1076953600 /* 0x40310200 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg {1076953600 /* 0x40310200 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg_IDX_0 1076953600
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts {4 /* 0x4 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_ngpios 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310280
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_PATH "/soc/pinctrl@40300000/gpio@40310280"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FULL_NAME "gpio@40310280"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_ORD 90
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_EXISTS 1
#define DT_N_INST_2_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280
#define DT_N_NODELABEL_gpio_prt5       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REG_IDX_0_VAL_ADDRESS 1076953728 /* 0x40310280 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg {1076953728 /* 0x40310280 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg_IDX_0 1076953728
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts {5 /* 0x5 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310300
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_PATH "/soc/pinctrl@40300000/gpio@40310300"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FULL_NAME "gpio@40310300"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_ORD 91
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_EXISTS 1
#define DT_N_INST_3_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300
#define DT_N_NODELABEL_gpio_prt6       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REG_IDX_0_VAL_ADDRESS 1076953856 /* 0x40310300 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_VAL_irq 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg {1076953856 /* 0x40310300 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg_IDX_0 1076953856
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts {6 /* 0x6 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts_IDX_0 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310380
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_PATH "/soc/pinctrl@40300000/gpio@40310380"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FULL_NAME "gpio@40310380"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_ORD 92
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_EXISTS 1
#define DT_N_INST_10_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380
#define DT_N_NODELABEL_gpio_prt7        DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REG_IDX_0_VAL_ADDRESS 1076953984 /* 0x40310380 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg {1076953984 /* 0x40310380 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg_IDX_0 1076953984
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts {7 /* 0x7 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310400
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_PATH "/soc/pinctrl@40300000/gpio@40310400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FULL_NAME "gpio@40310400"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_ORD 93
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_EXISTS 1
#define DT_N_INST_11_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400
#define DT_N_NODELABEL_gpio_prt8        DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REG_IDX_0_VAL_ADDRESS 1076954112 /* 0x40310400 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg {1076954112 /* 0x40310400 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg_IDX_0 1076954112
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts {8 /* 0x8 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310480
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_PATH "/soc/pinctrl@40300000/gpio@40310480"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FULL_NAME "gpio@40310480"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_ORD 94
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_EXISTS 1
#define DT_N_INST_4_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480
#define DT_N_NODELABEL_gpio_prt9       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REG_IDX_0_VAL_ADDRESS 1076954240 /* 0x40310480 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg {1076954240 /* 0x40310480 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg_IDX_0 1076954240
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts {9 /* 0x9 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310500
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_PATH "/soc/pinctrl@40300000/gpio@40310500"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FULL_NAME "gpio@40310500"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_ORD 95
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_EXISTS 1
#define DT_N_INST_12_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500
#define DT_N_NODELABEL_gpio_prt10       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REG_IDX_0_VAL_ADDRESS 1076954368 /* 0x40310500 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg {1076954368 /* 0x40310500 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg_IDX_0 1076954368
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts {10 /* 0xa */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310580
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_PATH "/soc/pinctrl@40300000/gpio@40310580"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FULL_NAME "gpio@40310580"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_ORD 96
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_EXISTS 1
#define DT_N_INST_13_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580
#define DT_N_NODELABEL_gpio_prt11       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REG_IDX_0_VAL_ADDRESS 1076954496 /* 0x40310580 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg {1076954496 /* 0x40310580 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg_IDX_0 1076954496
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts {11 /* 0xb */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310600
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_PATH "/soc/pinctrl@40300000/gpio@40310600"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FULL_NAME "gpio@40310600"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_ORD 97
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_EXISTS 1
#define DT_N_INST_5_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600
#define DT_N_NODELABEL_gpio_prt12      DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REG_IDX_0_VAL_ADDRESS 1076954624 /* 0x40310600 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_VAL_irq 12
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg {1076954624 /* 0x40310600 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg_IDX_0 1076954624
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts {12 /* 0xc */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts_IDX_0 12
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_ngpios 8
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310700
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_PATH "/soc/pinctrl@40300000/gpio@40310700"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FULL_NAME "gpio@40310700"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_ORD 98
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_EXISTS 1
#define DT_N_INST_14_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700
#define DT_N_NODELABEL_gpio_prt14       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REG_IDX_0_VAL_ADDRESS 1076954880 /* 0x40310700 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg {1076954880 /* 0x40310700 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg_IDX_0 1076954880
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts {14 /* 0xe */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_ngpios 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/hsiom@40300000
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_PATH "/soc/pinctrl@40300000/hsiom@40300000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FULL_NAME "hsiom@40300000"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_ORD 99
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_hsiom DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000
#define DT_N_NODELABEL_hsiom            DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REG_IDX_0_VAL_ADDRESS 1076887552 /* 0x40300000 */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_REG_IDX_1_VAL_ADDRESS 16384 /* 0x4000 */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_VAL_irq 16
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_COMPAT_MATCHES_infineon_cat1_hsiom 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_COMPAT_MODEL_IDX_0 "cat1-hsiom"
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible {"infineon,cat1-hsiom"}
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_IDX_0 "infineon,cat1-hsiom"
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-hsiom
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_hsiom
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_HSIOM
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg {1076887552 /* 0x40300000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg_IDX_0 1076887552
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts {15 /* 0xf */, 6 /* 0x6 */, 16 /* 0x10 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_2 16
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_3 6
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000_P_status_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p3_0_scb2_uart_rx
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_PATH "/soc/pinctrl@40300000/p3_0_scb2_uart_rx"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FULL_NAME "p3_0_scb2_uart_rx"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_ORD 100
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_SUPPORTS_ORDS \
	104, /* /soc/scb@40620000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_EXISTS 1
#define DT_N_NODELABEL_p3_0_scb2_uart_rx DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_pinmux 1179651
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_push_pull 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p3_1_scb2_uart_tx
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_PATH "/soc/pinctrl@40300000/p3_1_scb2_uart_tx"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FULL_NAME "p3_1_scb2_uart_tx"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_ORD 101
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_SUPPORTS_ORDS \
	104, /* /soc/scb@40620000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_EXISTS 1
#define DT_N_NODELABEL_p3_1_scb2_uart_tx DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_pinmux 1179907
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_push_pull 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p3_2_scb2_uart_rts
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_PATH "/soc/pinctrl@40300000/p3_2_scb2_uart_rts"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FULL_NAME "p3_2_scb2_uart_rts"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_ORD 102
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_SUPPORTS_ORDS \
	104, /* /soc/scb@40620000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_EXISTS 1
#define DT_N_NODELABEL_p3_2_scb2_uart_rts DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_pinmux 1180163
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_push_pull 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_input_enable 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/p3_3_scb2_uart_cts
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_PATH "/soc/pinctrl@40300000/p3_3_scb2_uart_cts"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FULL_NAME "p3_3_scb2_uart_cts"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_ORD 103
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_REQUIRES_ORDS \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_SUPPORTS_ORDS \
	104, /* /soc/scb@40620000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_EXISTS 1
#define DT_N_NODELABEL_p3_3_scb2_uart_cts DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_REG_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_IRQ_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_pinmux 1180419
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_bias_pull_up 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_bias_pull_down 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_push_pull 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_open_drain 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_open_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_input_enable 1
#define DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts_P_input_enable_EXISTS 1

/*
 * Devicetree node: /soc/scb@40620000
 *
 * Node identifier: DT_N_S_soc_S_scb_40620000
 *
 * Binding (compatible = infineon,cat1-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\infineon,cat1-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40620000_PATH "/soc/scb@40620000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40620000_FULL_NAME "scb@40620000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_scb_40620000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40620000_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40620000_ORD 104
#define DT_N_S_soc_S_scb_40620000_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40620000_REQUIRES_ORDS \
	28, /* /soc */ \
	29, /* /soc/interrupt-controller@e000e100 */ \
	100, /* /soc/pinctrl@40300000/p3_0_scb2_uart_rx */ \
	101, /* /soc/pinctrl@40300000/p3_1_scb2_uart_tx */ \
	102, /* /soc/pinctrl@40300000/p3_2_scb2_uart_rts */ \
	103, /* /soc/pinctrl@40300000/p3_3_scb2_uart_cts */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40620000_SUPPORTS_ORDS \
	106, /* /soc/scb@40620000/bt-hci */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40620000_EXISTS 1
#define DT_N_INST_0_infineon_cat1_uart DT_N_S_soc_S_scb_40620000
#define DT_N_NODELABEL_scb2            DT_N_S_soc_S_scb_40620000
#define DT_N_NODELABEL_uart2           DT_N_S_soc_S_scb_40620000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40620000_REG_NUM 1
#define DT_N_S_soc_S_scb_40620000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_REG_IDX_0_VAL_ADDRESS 1080164352 /* 0x40620000 */
#define DT_N_S_soc_S_scb_40620000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_scb_40620000_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40620000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40620000_IRQ_NUM 1
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_scb_40620000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_COMPAT_MATCHES_infineon_cat1_uart 1
#define DT_N_S_soc_S_scb_40620000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40620000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_COMPAT_MODEL_IDX_0 "cat1-uart"
#define DT_N_S_soc_S_scb_40620000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NUM 1
#define DT_N_S_soc_S_scb_40620000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_scb_40620000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts
#define DT_N_S_soc_S_scb_40620000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40620000_P_reg {1080164352 /* 0x40620000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_scb_40620000_P_reg_IDX_0 1080164352
#define DT_N_S_soc_S_scb_40620000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_scb_40620000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_reg_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_interrupts {41 /* 0x29 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_scb_40620000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_scb_40620000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_scb_40620000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 3)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 3)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_scb_40620000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000, pinctrl_names, 0)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_scb_40620000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_current_speed 115200
#define DT_N_S_soc_S_scb_40620000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_hw_flow_control 0
#define DT_N_S_soc_S_scb_40620000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_status "okay"
#define DT_N_S_soc_S_scb_40620000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_scb_40620000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_scb_40620000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40620000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_scb_40620000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_scb_40620000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_scb_40620000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40620000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000, status, 0)
#define DT_N_S_soc_S_scb_40620000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000, status, 0)
#define DT_N_S_soc_S_scb_40620000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_status_LEN 1
#define DT_N_S_soc_S_scb_40620000_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_compatible {"infineon,cat1-uart"}
#define DT_N_S_soc_S_scb_40620000_P_compatible_IDX_0 "infineon,cat1-uart"
#define DT_N_S_soc_S_scb_40620000_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-uart
#define DT_N_S_soc_S_scb_40620000_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_uart
#define DT_N_S_soc_S_scb_40620000_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_UART
#define DT_N_S_soc_S_scb_40620000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000, compatible, 0)
#define DT_N_S_soc_S_scb_40620000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000, compatible, 0)
#define DT_N_S_soc_S_scb_40620000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40620000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40620000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40620000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pinctrl@40300000/gpio@40310180
 *
 * Node identifier: DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180
 *
 * Binding (compatible = infineon,cat1-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\infineon,cat1-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_PATH "/soc/pinctrl@40300000/gpio@40310180"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FULL_NAME "gpio@40310180"

/* Node parent (/soc/pinctrl@40300000) identifier: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_PARENT DT_N_S_soc_S_pinctrl_40300000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_ORD 105
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REQUIRES_ORDS \
	29, /* /soc/interrupt-controller@e000e100 */ \
	30, /* /soc/pinctrl@40300000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_SUPPORTS_ORDS \
	106, /* /soc/scb@40620000/bt-hci */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_EXISTS 1
#define DT_N_INST_1_infineon_cat1_gpio DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180
#define DT_N_NODELABEL_gpio_prt3       DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REG_NUM 2
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REG_IDX_0_VAL_ADDRESS 1076953472 /* 0x40310180 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_REG_IDX_1_VAL_ADDRESS 128 /* 0x80 */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_RANGES_NUM 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_NUM 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_VAL_priority 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_COMPAT_MATCHES_infineon_cat1_gpio 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_COMPAT_MODEL_IDX_0 "cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg {1076953472 /* 0x40310180 */, 128 /* 0x80 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg_IDX_0 1076953472
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg_IDX_1 128
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts {3 /* 0x3 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts_IDX_1 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_gpio_controller 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_ngpios 6
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, status, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_status_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible {"infineon,cat1-gpio"}
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_IDX_0 "infineon,cat1-gpio"
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_IDX_0_STRING_UNQUOTED infineon,cat1-gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_IDX_0_STRING_TOKEN infineon_cat1_gpio
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CAT1_GPIO
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, compatible, 0)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_LEN 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_wakeup_source 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/scb@40620000/bt-hci
 *
 * Node identifier: DT_N_S_soc_S_scb_40620000_S_bt_hci
 *
 * Binding (compatible = infineon,cyw43xxx-bt-hci):
 *   $ZEPHYR_BASE\dts\bindings\bluetooth\infineon,cyw43xxx-bt-hci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_PATH "/soc/scb@40620000/bt-hci"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FULL_NAME "bt-hci"

/* Node parent (/soc/scb@40620000) identifier: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_PARENT DT_N_S_soc_S_scb_40620000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_ORD 106
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_REQUIRES_ORDS \
	104, /* /soc/scb@40620000 */ \
	105, /* /soc/pinctrl@40300000/gpio@40310180 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_EXISTS 1
#define DT_N_INST_0_infineon_cyw43xxx_bt_hci DT_N_S_soc_S_scb_40620000_S_bt_hci

/* Bus info (controller: '/soc/scb@40620000', type: '['uart']') */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_BUS_uart 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_BUS DT_N_S_soc_S_scb_40620000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_REG_NUM 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_RANGES_NUM 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_IRQ_NUM 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_COMPAT_MATCHES_infineon_cyw43xxx_bt_hci 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_COMPAT_VENDOR_IDX_0 "Infineon Technologies"
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_COMPAT_MODEL_IDX_0 "cyw43xxx-bt-hci"
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_PH DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_VAL_pin 4
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, bt_reg_on_gpios, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, bt_reg_on_gpios, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, bt_reg_on_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, bt_reg_on_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_LEN 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_bt_reg_on_gpios_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_fw_download_speed 3000000
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_fw_download_speed_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status "okay"
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, status, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, status, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_LEN 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_status_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible {"infineon,cyw43xxx-bt-hci"}
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_IDX_0 "infineon,cyw43xxx-bt-hci"
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED infineon,cyw43xxx-bt-hci
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_IDX_0_STRING_TOKEN infineon_cyw43xxx_bt_hci
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN INFINEON_CYW43XXX_BT_HCI
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, compatible, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, compatible, 0)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_LEN 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_wakeup_source 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_scb_40620000_S_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram              DT_N_S_memory_8000000
#define DT_CHOSEN_zephyr_sram_EXISTS       1
#define DT_CHOSEN_zephyr_flash             DT_N_S_flash_controller_40240000_S_flash_10000000
#define DT_CHOSEN_zephyr_flash_EXISTS      1
#define DT_CHOSEN_zephyr_console           DT_N_S_soc_S_scb_40650000
#define DT_CHOSEN_zephyr_console_EXISTS    1
#define DT_CHOSEN_zephyr_shell_uart        DT_N_S_soc_S_scb_40650000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS 1
#define DT_CHOSEN_zephyr_bt_uart           DT_N_S_soc_S_scb_40620000
#define DT_CHOSEN_zephyr_bt_uart_EXISTS    1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40300000) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx) fn(DT_N_S_soc_S_scb_40600000) fn(DT_N_S_soc_S_scb_40610000) fn(DT_N_S_soc_S_scb_40620000) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci) fn(DT_N_S_soc_S_scb_40630000) fn(DT_N_S_soc_S_scb_40640000) fn(DT_N_S_soc_S_scb_40650000) fn(DT_N_S_soc_S_scb_40660000) fn(DT_N_S_soc_S_scb_40670000) fn(DT_N_S_soc_S_scb_40680000) fn(DT_N_S_soc_S_scb_40690000) fn(DT_N_S_soc_S_scb_406a0000) fn(DT_N_S_soc_S_scb_406b0000) fn(DT_N_S_soc_S_scb_406c0000) fn(DT_N_S_soc_S_adc_409d0000) fn(DT_N_S_soc_S_watchdog_40260180) fn(DT_N_S_soc_S_counter_40380100) fn(DT_N_S_soc_S_counter_40380140) fn(DT_N_S_soc_S_counter_40380180) fn(DT_N_S_soc_S_counter_403801c0) fn(DT_N_S_soc_S_counter_40380200) fn(DT_N_S_soc_S_counter_40380240) fn(DT_N_S_soc_S_counter_40380280) fn(DT_N_S_soc_S_counter_403802c0) fn(DT_N_S_soc_S_counter_40390100) fn(DT_N_S_soc_S_counter_40390140) fn(DT_N_S_soc_S_counter_40390180) fn(DT_N_S_soc_S_counter_403901c0) fn(DT_N_S_soc_S_counter_40390200) fn(DT_N_S_soc_S_counter_40390240) fn(DT_N_S_soc_S_counter_40390280) fn(DT_N_S_soc_S_counter_403902c0) fn(DT_N_S_soc_S_counter_40390300) fn(DT_N_S_soc_S_counter_40390340) fn(DT_N_S_soc_S_counter_40390380) fn(DT_N_S_soc_S_counter_403903c0) fn(DT_N_S_soc_S_counter_40390400) fn(DT_N_S_soc_S_counter_40390440) fn(DT_N_S_soc_S_counter_40390480) fn(DT_N_S_soc_S_counter_403904c0) fn(DT_N_S_soc_S_counter_40390500) fn(DT_N_S_soc_S_counter_40390540) fn(DT_N_S_soc_S_counter_40390580) fn(DT_N_S_soc_S_counter_403905c0) fn(DT_N_S_soc_S_counter_40390600) fn(DT_N_S_soc_S_counter_40390640) fn(DT_N_S_soc_S_counter_40390680) fn(DT_N_S_soc_S_counter_403906c0) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_flash_controller_40240000) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) fn(DT_N_S_flash_controller_40240000_S_flash_14000000) fn(DT_N_S_memory_8000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_imo) fn(DT_N_S_clocks_S_path_mux0) fn(DT_N_S_clocks_S_path_mux1) fn(DT_N_S_clocks_S_path_mux2) fn(DT_N_S_clocks_S_path_mux3) fn(DT_N_S_clocks_S_path_mux4) fn(DT_N_S_clocks_S_fll0) fn(DT_N_S_clocks_S_pll0) fn(DT_N_S_clocks_S_clk_hf0) fn(DT_N_S_clocks_S_clk_hf1) fn(DT_N_S_clocks_S_clk_hf2) fn(DT_N_S_clocks_S_clk_hf3) fn(DT_N_S_clocks_S_clk_hf4) fn(DT_N_S_clocks_S_clk_fast) fn(DT_N_S_clocks_S_clk_slow) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_pinctrl_40300000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx) fn(DT_N_S_soc_S_scb_40620000) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci) fn(DT_N_S_soc_S_scb_40650000) fn(DT_N_S_soc_S_watchdog_40260180) fn(DT_N_S_soc_S_counter_40380100) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_flash_controller_40240000) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) fn(DT_N_S_flash_controller_40240000_S_flash_14000000) fn(DT_N_S_memory_8000000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_clk_imo) fn(DT_N_S_clocks_S_path_mux0) fn(DT_N_S_clocks_S_path_mux1) fn(DT_N_S_clocks_S_fll0) fn(DT_N_S_clocks_S_clk_hf0) fn(DT_N_S_clocks_S_clk_fast) fn(DT_N_S_clocks_S_clk_slow) fn(DT_N_S_clocks_S_clk_peri) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_gpio_keys) fn(DT_N_S_gpio_keys_S_button_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_hsiom_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310080, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310100, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310200, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310380, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310400, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310500, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310580, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310700, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40600000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40610000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40630000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40640000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40660000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40670000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40680000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40690000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406a0000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406b0000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_406c0000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_409d0000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380140, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403801c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380200, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380240, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380280, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403802c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390100, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390140, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403901c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390200, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390240, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390280, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403902c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390300, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390340, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390380, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403903c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390400, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390440, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390480, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403904c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390500, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390540, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390580, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403905c0, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390600, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390640, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40390680, __VA_ARGS__) fn(DT_N_S_soc_S_counter_403906c0, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__) fn(DT_N_S_memory_8000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux2, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux3, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux4, __VA_ARGS__) fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) fn(DT_N_S_clocks_S_pll0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf2, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf3, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf4, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_0_scb3_i2c_scl, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p6_1_scb3_i2c_sda, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_3_scb2_uart_cts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_2_scb2_uart_rts, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_0_scb2_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_0_scb5_uart_rx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p3_1_scb2_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_p5_1_scb5_uart_tx, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__) fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__) fn(DT_N_S_memory_8000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) fn(DT_N_S_clocks_S_fll0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_button_0, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_cy8cproto_062_4343w 1
#define DT_COMPAT_HAS_OKAY_psoc6 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_pinctrl 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_gpio 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_uart 1
#define DT_COMPAT_HAS_OKAY_infineon_cyw43xxx_bt_hci 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_watchdog 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_counter 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_infineon_cat1_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_fixed_factor_clock 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_cy8cproto_062_4343w_NUM_OKAY 1
#define DT_N_INST_psoc6_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_infineon_cat1_pinctrl_NUM_OKAY 1
#define DT_N_INST_infineon_cat1_gpio_NUM_OKAY 7
#define DT_N_INST_infineon_cat1_uart_NUM_OKAY 2
#define DT_N_INST_infineon_cyw43xxx_bt_hci_NUM_OKAY 1
#define DT_N_INST_infineon_cat1_watchdog_NUM_OKAY 1
#define DT_N_INST_infineon_cat1_counter_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_infineon_cat1_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 2
#define DT_N_INST_fixed_factor_clock_NUM_OKAY 6
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_cy8cproto_062_4343w(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_cy8cproto_062_4343w(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_cy8cproto_062_4343w(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_cy8cproto_062_4343w(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_psoc6(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_psoc6(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_psoc6(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_psoc6(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_pinctrl(fn) fn(DT_N_S_soc_S_pinctrl_40300000)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_pinctrl(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_gpio(fn) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_gpio(fn, ...) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310000, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310180, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310280, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310300, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310480, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310600, __VA_ARGS__) fn(DT_N_S_soc_S_pinctrl_40300000_S_gpio_40310680, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_uart(fn) fn(DT_N_S_soc_S_scb_40620000) fn(DT_N_S_soc_S_scb_40650000)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_uart(fn, ...) fn(DT_N_S_soc_S_scb_40620000, __VA_ARGS__) fn(DT_N_S_soc_S_scb_40650000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_uart(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_uart(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cyw43xxx_bt_hci(fn) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci)
#define DT_FOREACH_OKAY_VARGS_infineon_cyw43xxx_bt_hci(fn, ...) fn(DT_N_S_soc_S_scb_40620000_S_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cyw43xxx_bt_hci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cyw43xxx_bt_hci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40260180)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40260180, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_counter(fn) fn(DT_N_S_soc_S_counter_40380100)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_counter(fn, ...) fn(DT_N_S_soc_S_counter_40380100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_counter(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_counter(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m0_(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m0_(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m0_(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_infineon_cat1_flash_controller(fn) fn(DT_N_S_flash_controller_40240000)
#define DT_FOREACH_OKAY_VARGS_infineon_cat1_flash_controller(fn, ...) fn(DT_N_S_flash_controller_40240000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_infineon_cat1_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_infineon_cat1_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_flash_controller_40240000_S_flash_10000000) fn(DT_N_S_flash_controller_40240000_S_flash_14000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_flash_controller_40240000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_flash_controller_40240000_S_flash_14000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_8000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_clocks_S_clk_imo) fn(DT_N_S_clocks_S_fll0)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_clocks_S_clk_imo, __VA_ARGS__) fn(DT_N_S_clocks_S_fll0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_factor_clock(fn) fn(DT_N_S_clocks_S_path_mux0) fn(DT_N_S_clocks_S_path_mux1) fn(DT_N_S_clocks_S_clk_hf0) fn(DT_N_S_clocks_S_clk_fast) fn(DT_N_S_clocks_S_clk_slow) fn(DT_N_S_clocks_S_clk_peri)
#define DT_FOREACH_OKAY_VARGS_fixed_factor_clock(fn, ...) fn(DT_N_S_clocks_S_path_mux0, __VA_ARGS__) fn(DT_N_S_clocks_S_path_mux1, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hf0, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_fast, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_slow, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_peri, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_factor_clock(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_factor_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_infineon_cyw43xxx_bt_hci_BUS_uart 1
